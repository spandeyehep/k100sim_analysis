{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2bbc4fd2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.26/02\n"
     ]
    }
   ],
   "source": [
    "import os, sys\n",
    "import uproot, awkward\n",
    "import ROOT as rt\n",
    "import numpy as np\n",
    "from array import array\n",
    "from mpl_toolkits import mplot3d\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from tqdm import tqdm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9619c9f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_2M_neutrons/sim_2M_events_PuBe.root\"\n",
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_NaI_51M/sim_NaI_51M.root\"\n",
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_100k_nCap_cylinder/sim_100k_nCap_cylinder.root\"\n",
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_50M_PuBe_sourceAndshields/sim_50M_PuBe_sourceAndshields_0001.root\"\n",
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_300M_PuBe_sourceAndshields_boronBox/sim_100M_PuBe_sourceAndshields_boronBox_boronShield_V0H0.root\"\n",
    "#inFile_k100 = '/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_100M_PuBe_sourceAndshields_boronBox_walls_floor.root'\n",
    "inFile_k100 = '/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_300M_PuBe_sourceAndshields_boronBox_walls_shields/sim_300M_PuBe_sourceAndshields_boronBox_walls_floor_boronShield_V6H6_2inch.root'\n",
    "#inFile_k100 = \"/Users/shubhampandey/work/geant4/k100sim_anthony/sim_files/sim_300M_PuBe_sourceAndshields_boronBox/sim_100M_PuBe_sourceAndshields_boronBox_boronShield_V6H6_2inch.root\"\n",
    "file_k100 = uproot.open(inFile_k100)\n",
    "if(not file_k100):\n",
    "    print(\"could not open file: %s\"%(inFile_k100))\n",
    "    sys.exit(0)\n",
    "    \n",
    "tree_k100 = file_k100[\"simtree\"]\n",
    "\n",
    "if(not tree_k100):\n",
    "    print(\"simtree does not exist in file: %s\"%(file_k100))\n",
    "    sys.exit(0)\n",
    "\n",
    "save_ = False\n",
    "textOnTop = rt.TLatex()\n",
    "textOnTop.SetTextSize(0.05)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e7e121d",
   "metadata": {},
   "source": [
    "### livetime : 21.8 seconds for 50 M events"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ae02eb7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total livetime =  130.8 seconds\n"
     ]
    }
   ],
   "source": [
    "livetime = 300 * (21.8/50)\n",
    "print (\"Total livetime = \",livetime,\"seconds\")"
   ]
  },
  {
   "cell_type": "raw",
   "id": "13d49433",
   "metadata": {
    "scrolled": true
   },
   "source": [
    "tree_k100.show()\n",
    "#save_ = True"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1f73c778",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: c\n"
     ]
    }
   ],
   "source": [
    "# From k100sim\n",
    "EV = tree_k100[\"EV\"].array(library=\"np\")\n",
    "P = tree_k100[\"P\"].array(library=\"np\")\n",
    "Type = tree_k100[\"Type\"].array(library=\"np\")\n",
    "DT = tree_k100[\"DT\"].array(library=\"np\")\n",
    "TS = tree_k100[\"TS\"].array(library=\"np\")\n",
    "E1 = tree_k100[\"E1\"].array(library=\"np\")\n",
    "D3 = tree_k100[\"D3\"].array(library=\"np\")\n",
    "X1 = tree_k100[\"X1\"].array(library=\"np\")\n",
    "Y1 = tree_k100[\"Y1\"].array(library=\"np\")\n",
    "Z1 = tree_k100[\"Z1\"].array(library=\"np\")\n",
    "X3 = tree_k100[\"X3\"].array(library=\"np\")\n",
    "Y3 = tree_k100[\"Y3\"].array(library=\"np\")\n",
    "Z3 = tree_k100[\"Z3\"].array(library=\"np\")\n",
    "time1 = tree_k100[\"time1\"].array(library=\"np\")\n",
    "time3 = tree_k100[\"time3\"].array(library=\"np\")\n",
    "nCap = tree_k100[\"nCap\"].array(library=\"np\")\n",
    "\n",
    "# canvas\n",
    "c = rt.TCanvas(\"c\",\"c\",800,600)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "3fd8a899",
   "metadata": {},
   "source": [
    "i = 227\n",
    "\n",
    "for j in range(len(TS[i])):\n",
    "    print(\"i : Type : TS : P : X : Y : Z : DT : E1 : D3 :  nCap :: %d : %d : %d : %d : %0.5f : %0.5f : %0.5f : %d : %0.5f : %0.5f : %d\"%(j,Type[i][j],TS[i][j],P[i][j],X1[i][j],Y1[i][j],Z1[i][j],DT[i][j],E1[i][j], D3[i][j] ,nCap[i][j]))\n",
    "\n",
    "    \n",
    "tracks = TS[i]/100000\n",
    "tracks = tracks.astype('int32')\n",
    "neutron_tracks = tracks[Type[i] == 2112]\n",
    "neutron_parents = P[i][Type[i] == 2112]\n",
    "#neutron_tracks = neutron_tracks[neutron_parents == 0]\n",
    "neutron_energy = E1[i][Type[i] == 2112]\n",
    "neutron_DT = DT[i][Type[i] == 2112]\n",
    "\n",
    "neutron_X1 = X1[i][Type[i] == 2112]\n",
    "neutron_Y1 = Y1[i][Type[i] == 2112]\n",
    "neutron_Z1 = Z1[i][Type[i] == 2112]\n",
    "neutron_capture = nCap[i][Type[i] == 2112]\n",
    "\n",
    "unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "\n",
    "neutron_energy = neutron_energy[indices]\n",
    "neutron_X1 = neutron_X1[indices]\n",
    "neutron_Y1 = neutron_Y1[indices]\n",
    "neutron_Z1 = neutron_Z1[indices]\n",
    "neutron_capture = neutron_capture[indices]\n",
    "\n",
    "print(Type[i])\n",
    "print(P[i])\n",
    "print(neutron_capture)\n",
    "print(neutron_energy)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "51df4bb4",
   "metadata": {},
   "source": [
    "nevnt = 260\n",
    "type(TS)\n",
    "tracks = TS[nevnt]/100000\n",
    "# #type(tracks)\n",
    "tracks = tracks.astype('int32')\n",
    "photon_tracks = tracks[Type[nevnt] == 22]\n",
    "photon_energy = E1[nevnt][Type[nevnt] == 22]\n",
    "photon_parents = P[nevnt][Type[nevnt] == 22]\n",
    "photon_DT = DT[i][Type[i] == 22]\n",
    "unique_tracks, indices = np.unique(photon_tracks, return_index=True)\n",
    "#print (\"nCap_flag:\",nCap_flag[nevnt])\n",
    "print (\"TS:\")\n",
    "print (TS[nevnt])\n",
    "print (\"Parent\")\n",
    "print (P[nevnt])\n",
    "print (\"DT:\")\n",
    "print (DT[nevnt])\n",
    "print (\"nCap:\")\n",
    "print (nCap[nevnt])\n",
    "print (\"Tracks:\")\n",
    "print (tracks)\n",
    "print (\"Type:\")\n",
    "print (Type[nevnt])\n",
    "print (\"photon tracks:\")\n",
    "print (\"Find nCap index = \",(np.where(nCap[nevnt] == 1))[0][0])\n",
    "print(\"-----------\")\n",
    "print (photon_tracks)\n",
    "print (\"photon detectors:\")\n",
    "print (photon_DT)\n",
    "print (\"photon energy:\")\n",
    "print (photon_energy)\n",
    "print (\"Unique photon tracks:\")\n",
    "print (unique_tracks)\n",
    "print (\"Indices of unique photon tracks:\")\n",
    "print (indices)\n",
    "print (\"Energy of unique photon tracks:\")\n",
    "print (photon_energy[indices])\n",
    "print (\"parents of unique photon tracks:\")\n",
    "print (photon_parents[indices])\n",
    "print (\"Energy of parent photon:\")\n",
    "print (photon_energy[photon_parents == 0])"
   ]
  },
  {
   "cell_type": "raw",
   "id": "3cef55fd",
   "metadata": {},
   "source": [
    "i = 3\n",
    "len(np.where(nCap[i] == 1)[0])"
   ]
  },
  {
   "cell_type": "raw",
   "id": "203c88c8",
   "metadata": {},
   "source": [
    "i = 9\n",
    "tracks = TS[i]/100000\n",
    "tracks = tracks.astype('int32')\n",
    "neutron_tracks = tracks[(Type[i] == 2112)]\n",
    "neutron_energy = E1[i][Type[i] == 2112]\n",
    "neutron_DT = DT[i][Type[i] == 2112]\n",
    "neutron_D3 = D3[i][Type[i] == 2112]\n",
    "neutron_parents = P[i][Type[i] == 2112]\n",
    "#     neutron_X1 = X1[i][Type[i] == 2112]\n",
    "#     neutron_Y1 = Y1[i][Type[i] == 2112]\n",
    "# neutron_Z1 = Z1[i][Type[i] == 2112]\n",
    "neutron_X3 = X3[i][Type[i] == 2112]\n",
    "neutron_Y3 = Y3[i][Type[i] == 2112]\n",
    "neutron_Z3 = Z3[i][Type[i] == 2112]\n",
    "neutron_capture = nCap[i][Type[i] == 2112]\n",
    "\n",
    "print (\"ncap:\")\n",
    "print(nCap[i])\n",
    "print (\"Before unique condition:\")\n",
    "print (neutron_capture)\n",
    "print (neutron_DT)\n",
    "print (neutron_parents)\n",
    "print (neutron_D3)\n",
    "print (neutron_tracks)\n",
    "\n",
    "\n",
    "if(len(np.where(neutron_capture == 1)[0]) > 0):\n",
    "    i_ncap = (np.where(neutron_capture == 1))[0][0]\n",
    "    print(\"capture index = \",i_ncap)\n",
    "    print(\"Neutron energy = \",neutron_energy[i_ncap])\n",
    "    print(\"Detector = \",neutron_DT[i_ncap])\n",
    "    print(\"X3 : Y3 : Z3 :: %0.2f : %0.2f : %0.2f\"%(neutron_X3[i_ncap],neutron_Y3[i_ncap],neutron_Z3[i_ncap]))\n",
    "    \n",
    "unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "print (\"number of unique tracks = \",len(unique_tracks))\n",
    "neutron_energy = neutron_energy[indices]\n",
    "neutron_capture = neutron_capture[indices]\n",
    "neutron_tracks = neutron_tracks[indices]\n",
    "print (\"After unique condition:\")\n",
    "print (neutron_capture)\n",
    "print(neutron_tracks)\n",
    "#(np.where(nCap[i] == 1))[0][0]"
   ]
  },
  {
   "cell_type": "raw",
   "id": "26331288",
   "metadata": {},
   "source": [
    "ncap_events = 0 \n",
    "ncap_events_fancy = 0\n",
    "\n",
    "for i in tqdm(range(len(EV))):\n",
    "    check = 0\n",
    "    for j in range(len(nCap[i])):\n",
    "        if(nCap[i][j] == 1 and DT[i][j] == 1):\n",
    "            ncap_events += 1\n",
    "            check += 1\n",
    "        if(check > 1):\n",
    "            print(\"Double count for event = \",i)\n",
    "            break\n",
    "    tracks = TS[i]/100000\n",
    "    tracks = tracks.astype('int32')\n",
    "    neutron_tracks = tracks[Type[i] == 2112]\n",
    "    neutron_parents = P[i][Type[i] == 2112]\n",
    "    #neutron_tracks = neutron_tracks[neutron_parents == 0]\n",
    "    if(len(neutron_tracks) == 0):\n",
    "        continue\n",
    "    unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "#     if(len(unique_tracks) !=1):\n",
    "#         print(\"More than one unique tracks for event = \",i)\n",
    "#         break\n",
    "    neutron_energy = E1[i][Type[i] == 2112]\n",
    "    neutron_capture = nCap[i][Type[i] == 2112]\n",
    "    neutron_DT = DT[i][Type[i] == 2112]\n",
    "    for i_ncap in (np.where(neutron_capture == 1))[0]:\n",
    "        if(neutron_DT[i_ncap] == 1):\n",
    "            ncap_events_fancy += 1\n",
    "      \n",
    "    if(ncap_events != ncap_events_fancy):\n",
    "        print(\"Out of synch from event = \",i)\n",
    "        break\n",
    "#     if(len(np.where(neutron_capture == 1)[0]) > 1):\n",
    "#         print(\"Multiple capture events in event = %d\"%(i))\n",
    "#         print(\"np.where(neutron_capture == 1)[0] = \",np.where(neutron_capture == 1)[0])\n",
    "#         break\n",
    "#     if(len(np.where(neutron_capture == 1)[0]) > 0):\n",
    "#         i_ncap = (np.where(neutron_capture == 1))[0][0]\n",
    "#         ncap_events_fancy += 1\n",
    "        \n",
    "\n",
    "\n",
    "print(\"Total ncap events = \",ncap_events)\n",
    "print(\"Total ncap events fancy = \",ncap_events_fancy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ab5f9f6b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1637037/1637037 [00:17<00:00, 91071.25it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total events = 1637037\n",
      "Events with no registered neutrons in detector = 1222973\n",
      "Events with registered neutrons in NaI+Si = 414064\n",
      "Neutrons registered in Silicon = 1101\n",
      "Neutrons registered in NaI = 412963\n",
      "Total neutron capture events = 59751 out of 414064 events.\n",
      "Total neutron capture events in Si = 20 out of 59751 events.\n",
      "Total neutron capture events in NaI = 59731 out of 59751 events.\n"
     ]
    }
   ],
   "source": [
    "h_k100sim_Nphotons_all = rt.TH1F(\"h_Nphotons_all\",\"Number of photons from k100Sim\",50,0,50)\n",
    "h_pdgid_parent = rt.TH1F(\"h_pdgid\",\"PDGID of parent particle\",3000,0,3000)\n",
    "\n",
    "h_parent_energy_log10 = rt.TH1F(\"h_parent_energy_log10\",\"Energy of neutrons\",150,-10,5)\n",
    "h_parent_energy_log10.GetXaxis().SetTitle(\"log10(Parent Energy [MeV])\")\n",
    "\n",
    "h_parent_energy_log10_inSi = rt.TH1F(\"h_parent_energy_log10_inSi\",\"Energy of neutrons traversing silicon\",150,-10,5)\n",
    "h_parent_energy_log10_inSi.GetXaxis().SetTitle(\"log10(Parent Energy [MeV])\")\n",
    "\n",
    "h_parent_energy_log10_on_nCap = rt.TH1F(\"h_parent_energy_log10_on_nCap\",\"Energy of neutrons on nCap\",150,-10,5)\n",
    "h_parent_energy_log10_on_nCap.GetXaxis().SetTitle(\"log10(Parent Energy [MeV])\")\n",
    "\n",
    "h_energy_neutron_nCap = rt.TH1F(\"h_energy_neutron_nCap\",\"Energy of neutrons for nCap\",150,0,1.5)\n",
    "h_energy_neutron_nCap.GetXaxis().SetTitle(\"Energy [eV]\")\n",
    "\n",
    "h_Edep_neutron = rt.TH1F(\"h_Edep_neutron\",\"Energy deposited by neutrons before nCap\",150,-10,5)\n",
    "h_Edep_neutron.GetXaxis().SetTitle(\"log10(Neutron Edep [MeV])\")\n",
    "\n",
    "h_neutron_x_y = rt.TH2F(\"h_neutron_x_y\",\"Position of neutrons registered in detector\",120,-60,60,120,-60,60)\n",
    "h_neutron_x_y.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y.GetYaxis().SetTitle(\"y [mm]\")\n",
    "\n",
    "\n",
    "\n",
    "h_neutron_x_y_nCap = rt.TH2F(\"h_neutron_x_y_nCap\",\"Position of neutron captures registered in Si crystal\",120,-60,60,120,-60,60)\n",
    "h_neutron_x_y_nCap.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y_nCap.GetYaxis().SetTitle(\"y [mm]\")\n",
    "\n",
    "h_neutron_x_y_z_nCap = rt.TH3F(\"h_neutron_x_y_z_nCap\",\"Position of neutron captures registered in Si crystal\",120,-60,60,120,-60,60,60,10.0, 70.0)\n",
    "h_neutron_x_y_z_nCap.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y_z_nCap.GetYaxis().SetTitle(\"y [mm]\")\n",
    "h_neutron_x_y_z_nCap.GetYaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "\n",
    "h_neutron_x = rt.TH1F(\"h_neutron_x\",\"X position of neutrons registered in the detector\",120,-60,60)\n",
    "h_neutron_x.GetXaxis().SetTitle(\"x [mm]\")\n",
    "\n",
    "h_neutron_y = rt.TH1F(\"h_neutron_y\",\"y position of neutrons registered in the detector\",120,-60,60)\n",
    "h_neutron_y.GetXaxis().SetTitle(\"y [mm]\")\n",
    "\n",
    "h_neutron_z = rt.TH1F(\"h_neutron_z\",\"Z position of neutrons registered in the detector\",600, 10.0, 70.0)\n",
    "h_neutron_z.GetXaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "h_neutron_dR_nCap = rt.TH1F(\"h_neutron_dR_nCap\",\"dR(preSetp, postStep) for neutron capture\",200, 0.0, 200.0)\n",
    "h_neutron_dR_nCap.GetXaxis().SetTitle(\"dR [mm]\")\n",
    "\n",
    "h_photon_energy_nCapInNaI = rt.TH1F(\"h_photon_energy_nCapInNaI\",\"Energy of photons produced on nCap in NaI as per Geant4\",150,0,15)\n",
    "h_photon_energy_nCapInNaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_energy_gamma_nCap_Si = rt.TH1F(\"h_energy_gamma_nCap_Si\",\"Energy of gammas on nCap Si\",500,0,10)\n",
    "h_energy_gamma_nCap_Si.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_energySum_gamma_nCap_Si = rt.TH1F(\"h_energySum_gamma_nCap_Si\",\"EnergySum of gammas on nCap Si\",1000,0,50)\n",
    "h_energySum_gamma_nCap_Si.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_nGammas_nCap_Si = rt.TH1F(\"h_nGammas_nCap_Si\",\"Nb of gammas on nCap in Si\",20,0,20)\n",
    "h_nGammas_nCap_Si.GetXaxis().SetTitle(\"Nb of gammas\")\n",
    "\n",
    "\n",
    "total_capture_events = 0\n",
    "capture_in_si = 0\n",
    "capture_in_NaI = 0\n",
    "events_with_no_neutron = []\n",
    "events_with_neutron = []\n",
    "events_with_nCap_in_NaI = []\n",
    "events_with_nCap_in_Si = []\n",
    "debug_count = 0\n",
    "for i in tqdm(range(len(EV))):\n",
    "    tracks = TS[i]/100000\n",
    "    tracks = tracks.astype('int32')\n",
    "    neutron_tracks = tracks[Type[i] == 2112]\n",
    "    neutron_parents = P[i][Type[i] == 2112]\n",
    "    \n",
    "    #neutron_tracks = neutron_tracks[neutron_parents == 0]\n",
    "    \n",
    "    \n",
    "    if(len(neutron_tracks) == 0): # No neutron in the event\n",
    "        events_with_no_neutron.append(i)\n",
    "        continue\n",
    "        \n",
    "    unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "    \n",
    "#     if(len(unique_tracks) !=1): # Sanity check\n",
    "#         print(\"More than one unique tracks for event = \",i)\n",
    "#         break\n",
    "    \n",
    "    events_with_neutron.append(i) \n",
    "    neutron_energy = E1[i][Type[i] == 2112]\n",
    "    neutron_parents = P[i][Type[i] == 2112]\n",
    "#     if(len(neutron_energy[neutron_parents == 0]) == 0):\n",
    "#         continue\n",
    "    neutron_DT = DT[i][Type[i] == 2112]\n",
    "    neutron_D3 = D3[i][Type[i] == 2112]\n",
    "    \n",
    "    neutron_X1 = X1[i][Type[i] == 2112]\n",
    "    neutron_Y1 = Y1[i][Type[i] == 2112]\n",
    "    neutron_Z1 = Z1[i][Type[i] == 2112]\n",
    "    neutron_X3 = X3[i][Type[i] == 2112]\n",
    "    neutron_Y3 = Y3[i][Type[i] == 2112]\n",
    "    neutron_Z3 = Z3[i][Type[i] == 2112]\n",
    "    neutron_capture = nCap[i][Type[i] == 2112]\n",
    "    neutron_tracks = TS[i][Type[i] == 2112]\n",
    "    \n",
    "    parent_neutron_en = (neutron_energy)[0]\n",
    "    parent_neutron_X3 = (neutron_X3)[0]\n",
    "    parent_neutron_Y3 = (neutron_Y3)[0]\n",
    "    parent_neutron_Z3 = (neutron_Z3)[0]\n",
    "    parent_neutron_DT = (neutron_DT)[0]\n",
    "    \n",
    "    h_parent_energy_log10.Fill(np.log10(parent_neutron_en)) # Use first neutron resgiterd in Si\n",
    "    h_neutron_x_y.Fill(parent_neutron_X3,parent_neutron_Y3)\n",
    "    h_neutron_x.Fill(parent_neutron_X3)\n",
    "    h_neutron_y.Fill(parent_neutron_Y3)\n",
    "    h_neutron_z.Fill(parent_neutron_Z3)\n",
    "    \n",
    "    if(parent_neutron_DT == 1):\n",
    "        h_parent_energy_log10_inSi.Fill(np.log10(parent_neutron_en))\n",
    "    \n",
    "    nCap_Si_neutron_track = -1\n",
    "    nCap_Si = False\n",
    "    for i_ncap in (np.where(neutron_capture == 1))[0]:\n",
    "        Edep_ncap = neutron_D3[i_ncap]\n",
    "        if(Edep_ncap > 0.):\n",
    "            print(\"non zero Edep %f on nCap by neutron for event = %d\"%(Edep_ncap,i))\n",
    "#         if(np.sum(neutron_D3) > )\n",
    "        total_capture_events += 1\n",
    "#         h_parent_energy_log10_on_nCap.Fill(np.log10(neutron_energy[i_ncap]))\n",
    "#         h_energy_neutron_nCap.Fill(neutron_energy[i_ncap]*1.e6)\n",
    "        dx = neutron_X3[i_ncap] - neutron_X1[i_ncap]\n",
    "        dy = neutron_Y3[i_ncap] - neutron_Y1[i_ncap]\n",
    "        dz = neutron_Z3[i_ncap] - neutron_Z1[i_ncap]\n",
    "        h_Edep_neutron.Fill(np.sum(neutron_D3))\n",
    "        h_neutron_dR_nCap.Fill(np.sqrt(dx*dx + dy*dy + dz*dz))\n",
    "        if(neutron_DT[i_ncap] == 1):\n",
    "            capture_in_si += 1\n",
    "            h_neutron_x_y_nCap.Fill(neutron_X3[i_ncap],neutron_Y3[i_ncap])\n",
    "            h_neutron_x_y_z_nCap.Fill(neutron_X3[i_ncap],neutron_Y3[i_ncap],neutron_Z3[i_ncap])\n",
    "            h_parent_energy_log10_on_nCap.Fill(np.log10(neutron_energy[i_ncap]))\n",
    "            h_energy_neutron_nCap.Fill(neutron_energy[i_ncap]*1.e6)\n",
    "            events_with_nCap_in_Si.append(i)\n",
    "            nCap_Si = True\n",
    "            nCap_Si_neutron_track = int(neutron_tracks[i_ncap]/100000)*100000\n",
    "        else:\n",
    "            capture_in_NaI += 1\n",
    "            events_with_nCap_in_NaI.append(i)\n",
    "    \n",
    "    if(nCap_Si):\n",
    "        esum_gammas = 0.\n",
    "        n_gammas = 0\n",
    "        \n",
    "        for j,capture in enumerate(nCap[i]):\n",
    "            track_temp = int(TS[i][j]/100000)*100000\n",
    "            step_temp = TS[i][j] - (track_temp)\n",
    "            if(P[i][j] == nCap_Si_neutron_track and step_temp == 1):\n",
    "                if(Type[i][j] == 22):\n",
    "                    h_energy_gamma_nCap_Si.Fill(E1[i][j])\n",
    "                    esum_gammas += E1[i][j]\n",
    "                    n_gammas += 1\n",
    "        \n",
    "        h_nGammas_nCap_Si.Fill(n_gammas)\n",
    "        h_energySum_gamma_nCap_Si.Fill(esum_gammas)\n",
    "        if(debug_count < 10 and n_gammas >= 9):\n",
    "            print(\"%d photons, %f MeV Edep for event %d\"%(n_gammas, esum_gammas, i))\n",
    "            debug_count += 1\n",
    "    \n",
    "                \n",
    "    \n",
    "        \n",
    "print (\"Total events = %d\"%(len(EV)))\n",
    "print (\"Events with no registered neutrons in detector = %d\"%(len(events_with_no_neutron)))\n",
    "print (\"Events with registered neutrons in NaI+Si = %d\"%(len(events_with_neutron)))\n",
    "#print (events_with_no_neutron)\n",
    "print (\"Neutrons registered in Silicon = %d\"%(h_parent_energy_log10_inSi.GetEntries()))\n",
    "print (\"Neutrons registered in NaI = %d\"%(len(events_with_neutron) - h_parent_energy_log10_inSi.GetEntries()))\n",
    "print (\"Total neutron capture events = %d out of %d events.\"%(total_capture_events,len(events_with_neutron)))\n",
    "print (\"Total neutron capture events in Si = %d out of %d events.\"%(capture_in_si,total_capture_events))\n",
    "print (\"Total neutron capture events in NaI = %d out of %d events.\"%(capture_in_NaI,total_capture_events))\n",
    "\n",
    "\n",
    "#     for j,parent in enumerate(P[i]):\n",
    "#         if(parent == 0):\n",
    "#             h_pdgid_parent.Fill(Type[i][j])\n",
    "#             h_parent_energy_log10.Fill(np.log10(E1[i][j]))\n",
    "#             h_neutron_x_y.Fill(X1[i][j],Y1[i][j])\n",
    "#             h_neutron_x.Fill(X1[i][j])\n",
    "#             h_neutron_y.Fill(Y1[i][j])\n",
    "#             h_neutron_z.Fill(Z1[i][j])\n",
    "#             if(nCap[i][j] == 1):\n",
    "#                 h_parent_energy_log10_on_nCap.Fill(np.log10(E1[i][j]))\n",
    "#                 h_energy_neutron_nCap.Fill(E1[i][j]*1.e6)\n",
    "\n",
    "#                 #print (E1[i][j]*1.e6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2f175431",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "nCap rate in NaI = 456.66 Hz\n",
      "nCap rate in Si = 0.15 Hz\n"
     ]
    }
   ],
   "source": [
    "nCap_NaI_rate = float(capture_in_NaI)/livetime\n",
    "nCap_Si_rate = float(capture_in_si)/livetime\n",
    "print (\"nCap rate in NaI = %0.2f Hz\"%(nCap_NaI_rate))\n",
    "print (\"nCap rate in Si = %0.2f Hz\"%(nCap_Si_rate))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75317452",
   "metadata": {},
   "outputs": [],
   "source": [
    "events_with_nCap_in_NaI\n",
    "line = \"\"\n",
    "for i,j in enumerate(events_with_nCap_in_Si):\n",
    "    line += \"%d, \"%(j)\n",
    "    if(i%15 == 0):\n",
    "        line += \"\\n\"\n",
    "print (line)\n",
    "# i = 89\n",
    "# #events_with_nCap_in_Si[0]\n",
    "# print(nCap[i])\n",
    "# print(DT[i])\n",
    "# print(E1[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c697b17",
   "metadata": {},
   "outputs": [],
   "source": [
    "%jsroot on\n",
    "h_parent_energy_log10_inSi.Draw()\n",
    "h_parent_energy_log10_on_nCap.SetLineColor(rt.kRed)\n",
    "h_parent_energy_log10_on_nCap.SetLineWidth(2)\n",
    "h_parent_energy_log10_on_nCap.SetLineStyle(2)\n",
    "h_parent_energy_log10_on_nCap.Draw(\"sames\")\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"EnergyNeutronOverlay_100k.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fdc296ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_Edep_neutron.Draw()\n",
    "\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "349e060a",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energy_neutron_nCap.Scale(1.0/h_energy_neutron_nCap.Integral())\n",
    "h_energy_neutron_nCap.GetYaxis().SetTitle(\"Normalized to unity area\")\n",
    "h_energy_neutron_nCap.Draw(\"hist\")\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91df8892",
   "metadata": {},
   "outputs": [],
   "source": [
    "# nbins = h_energy_neutron_nCap.GetNbinsX()\n",
    "# totalBinContent = 0\n",
    "# for i in range(nbins+1):\n",
    "#     if(i == 0):\n",
    "#         continue\n",
    "#     normalizedBinContent = h_energy_neutron_nCap.GetBinContent(i)/h_energy_neutron_nCap.Integral()\n",
    "    \n",
    "#     print(\"%0.9f %0.3f \"%((h_energy_neutron_nCap.GetBinCenter(i)*1e-6),normalizedBinContent))\n",
    "#     totalBinContent += normalizedBinContent\n",
    "\n",
    "# print(\"----------\")\n",
    "# print(totalBinContent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15bd209b",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#h_pdgid_parent.Draw()\n",
    "rt.gPad.SetLogy(0)\n",
    "\n",
    "#h_neutron_x_y.Draw(\"colz\")\n",
    "h_neutron_x_y_nCap.SetLineColor(rt.kRed)\n",
    "h_neutron_x_y_nCap.SetLineWidth(3)\n",
    "\n",
    "h_neutron_x_y_nCap.Draw(\"box \")\n",
    "\n",
    "\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"NCap_pos_in_Si.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e003bd5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "rt.gPad.SetLogy(0)\n",
    "h_neutron_x_y_z_nCap.Draw(\"box\")\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"neutron_capture_si_3D_100k.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e374520e",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_neutron_dR_nCap.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64d644e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_neutron_x.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf66646a",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_neutron_y.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "17d5758a",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_neutron_z.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff8fd8dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_nGammas_nCap_Si.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b3e9bb2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energy_gamma_nCap_Si.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "73b9726c",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energySum_gamma_nCap_Si.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "65c99f7e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def data_for_cylinder_along_z(center_x,center_y,radius,z_center,height_z):\n",
    "    z = np.linspace(z_center - height_z/2, z_center + height_z/2, 50)\n",
    "    theta = np.linspace(0, 2*np.pi, 50)\n",
    "    theta_grid, z_grid=np.meshgrid(theta, z)\n",
    "    x_grid = radius*np.cos(theta_grid) + center_x\n",
    "    y_grid = radius*np.sin(theta_grid) + center_y\n",
    "    return x_grid,y_grid,z_grid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "19afd0ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure()\n",
    "ax = plt.axes(projection='3d')\n",
    "for i in tqdm(range(len(EV))):\n",
    "    for j,capture in enumerate(nCap[i]):\n",
    "        if(capture == 1):\n",
    "            if(DT[i][j] == 1):\n",
    "                ax.scatter(X3[i][j], Y3[i][j], Z3[i][j],marker=\"o\",c=\"r\")\n",
    "            else:\n",
    "                ax.scatter(X3[i][j], Y3[i][j], Z3[i][j],marker=\"o\",c=\"g\")\n",
    "            #X1[i][j] = X1[i][j]\n",
    "\n",
    "# Draw detector crystal\n",
    "Xc,Yc,Zc = data_for_cylinder_along_z(0.0,0.0,50.0,20.0 + 33.3/2,33.3)\n",
    "ax.plot_surface(Xc, Yc, Zc, alpha=0.5)\n",
    "ax.set_xlabel('X1 [mm]')\n",
    "ax.set_ylabel('Y1 [mm]')\n",
    "ax.set_zlabel('Z1 [mm]')\n",
    "fig.suptitle(\"Neutron capture position\", fontsize=16)\n",
    "#ax.view_init(elev=30, azim=60)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f95b0ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in events_with_nCap_in_NaI:\n",
    "    tracks = TS[i]/100000\n",
    "    # #type(tracks)\n",
    "    ncap_index = (np.where(nCap[i] == 1))[0][0]\n",
    "    tracks = tracks.astype('int32')\n",
    "    parent_track = tracks[ncap_index]*100000\n",
    "    parent_type = Type[i][ncap_index]\n",
    "    photon_tracks = tracks[Type[i] == 22]\n",
    "    photon_energy = E1[i][Type[i] == 22]\n",
    "    photon_parents = P[i][Type[i] == 22]    \n",
    "    photon_DT = DT[i][Type[i] == 22]\n",
    "    unique_tracks, indices = np.unique(photon_tracks, return_index=True)\n",
    "    photon_parents = photon_parents[indices]\n",
    "    #parent_type = Type[i][indices]\n",
    "    photon_DT = photon_DT[indices]\n",
    "    #print (photon_energy[indices])\n",
    "#     print (parent_track)\n",
    "#     print (parent_type)\n",
    "#     print (photon_parents)\n",
    "    #break\n",
    "    for energy in photon_energy[indices]:\n",
    "        h_photon_energy_nCapInNaI.Fill(energy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58ca15b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_photon_energy_nCapInNaI.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6d23759",
   "metadata": {},
   "source": [
    "## Background study in NaI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "c9974f40",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|                                                                                                                                         | 947/1560378 [00:00<05:28, 4747.56it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "event number with Edep_NaI > 10 MeV = 159, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 252, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 678, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 784, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 790, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 850, nCap-Nai? 1\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|▎                                                                                                                                       | 2920/1560378 [00:00<05:30, 4717.42it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "event number with Edep_NaI > 10 MeV = 2252, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 2261, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 2622, nCap-Nai? 1\n",
      "event number with Edep_NaI > 10 MeV = 2765, nCap-Nai? 0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1560378/1560378 [05:37<00:00, 4628.94it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Events with neutrons passing through NaI = 323749\n",
      "Events with neutrons passing through NaI and nCap = 47762\n",
      "nCap in NaI event fraction = 14.75%\n",
      "Total event count with Edep NaI > 0. = 1248327\n",
      "Total Event count between 3 and 10 MeV = 67109\n",
      "Total Event count for (3 < Edep <  10 MeV) && (Edep_tile < 10 MeV) = 66588\n",
      "Ncap-in-NaI Event count for (3 < Edep <  10 MeV) && (Edep_tile < 10 MeV) = 23767\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_si_Edep (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_si_Edep_withTimeCut (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_NaI_Edep (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_NaI_Edep_withTimeCut (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_NaI_Edep_NaiNcap (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_tile_multiplicity (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_tile_energy (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_neutron_NaI (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_neutron_NaI (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_edep_NaI_time (Potential memory leak).\n",
      "Warning in <TROOT::Append>: Replacing existing TH1: h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity (Potential memory leak).\n"
     ]
    }
   ],
   "source": [
    "#background study\n",
    "\n",
    "h_k100sim_bkg_si_Edep = rt.TH1F(\"h_k100sim_bkg_si_Edep\",\"Energy deposited in Si on non-nCap events\",500,0,50)\n",
    "h_k100sim_bkg_si_Edep.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_k100sim_bkg_si_Edep_withTimeCut = rt.TH1F(\"h_k100sim_bkg_si_Edep_withTimeCut\",\"Energy deposited in Si on non-nCap events < 1ms\",500,0,50)\n",
    "h_k100sim_bkg_si_Edep_withTimeCut.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_k100sim_bkg_NaI_Edep = rt.TH1F(\"h_k100sim_bkg_NaI_Edep\",\"Energy deposited in NaI on non-nCap events\",500,0,50)\n",
    "h_k100sim_bkg_NaI_Edep.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut = rt.TH1F(\"h_k100sim_bkg_NaI_Edep_withTimeCut\",\"Energy deposited in NaI on non-nCap events  < 1ms\",500,0,50)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap = rt.TH1F(\"h_k100sim_bkg_NaI_Edep_NaiNcap\",\"Energy deposited in NaI on non-nCap events (Ncap in NaI)\",500,0,50)\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_tile_multiplicity = rt.TH1F(\"h_tile_multiplicity\",\"Numbers of tiles with non-zero Edep\",25,0,25)\n",
    "h_tile_multiplicity.GetXaxis().SetTitle(\"Multiplicity\")\n",
    "\n",
    "h_tile_energy = rt.TH1F(\"h_tile_energy\",\"Edep in individual tiles\",2500,0,50)\n",
    "h_tile_energy.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_neutron_NaI = rt.TH1F(\"h_neutron_NaI\",\"Energy of neutrons flux in NaI\",1500,-10,5)\n",
    "h_neutron_NaI.GetXaxis().SetTitle(\"log10(Neutron [MeV])\")\n",
    "\n",
    "h_neutron_NaI_nCap = rt.TH1F(\"h_neutron_NaI\",\"Energy of neutrons flux in NaI on nCap\",1500,-10,5)\n",
    "h_neutron_NaI_nCap.GetXaxis().SetTitle(\"log10(Neutron [MeV])\")\n",
    "\n",
    "h_edep_NaI_time = rt.TH1F(\"h_edep_NaI_time\",\"time3\",355,-0.5,35)\n",
    "h_edep_NaI_time.GetXaxis().SetTitle(\"log10(time3 [ns])\")\n",
    "\n",
    "\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity = rt.TH2F(\"h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity\",\"Nai Edep vs multiplicity\",500,0,50,25,0,25)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity.GetYaxis().SetTitle(\"Multiplicity\")\n",
    "\n",
    "\n",
    "debug_count = 0\n",
    "Edep_tiles = np.zeros(23)\n",
    "\n",
    "total_event_count = 0\n",
    "event_count_3_10MeV = 0\n",
    "total_event_count_in_trig_window = 0\n",
    "ncap_nai_event_count_in_trig_window = 0\n",
    "\n",
    "neutron_in_NaI = 0\n",
    "neutron_in_NaI_nCap = 0\n",
    "\n",
    "events_with_NaI_Edep_10MeV_or_more = []\n",
    "\n",
    "for i in tqdm(range(len(EV))):\n",
    "#     if(i > 100000):\n",
    "#         break\n",
    "    ncap_si = False\n",
    "    edep_si = 0.\n",
    "    edep_nai = 0.\n",
    "    edep_si_tCut = 0.\n",
    "    edep_nai_tCut = 0.\n",
    "    ncap_nai = False\n",
    "    Edep_tiles_temp = np.zeros(23)\n",
    "    neutron_energy = 0.\n",
    "    neutron_energy_nCap = 0.\n",
    "    \n",
    "#     tracks = TS[i]/100000\n",
    "#     tracks = tracks.astype('int32')\n",
    "#     neutron_tracks = tracks[(Type[i] == 2112)]\n",
    "#     neutron_energy = E1[i][Type[i] == 2112]\n",
    "#     neutron_DT = DT[i][Type[i] == 2112]\n",
    "#     neutron_capture = nCap[i][Type[i] == 2112]\n",
    "#     unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "    \n",
    "#     neutron_energy = neutron_energy[indices]\n",
    "#     neutron_capture = neutron_capture[indices]\n",
    "#     neutron_tracks = neutron_tracks[indices]\n",
    "    \n",
    "    first_step_in_detector = True\n",
    "    TS_debug = -1\n",
    "    for j,capture in enumerate(nCap[i]):\n",
    "        if(capture == True and DT[i][j] == 1):\n",
    "            ncap_si = True\n",
    "            break\n",
    "        if(Type[i][j] == 2112 and DT[i][j] != 1 and first_step_in_detector):\n",
    "            neutron_energy = E1[i][j]\n",
    "            TS_debug = TS[i][j]\n",
    "            first_step_in_detector = False\n",
    "            \n",
    "#             track = int(TS[i][j]/100000)\n",
    "#             step = TS[i][j] - track\n",
    "#             if(step == 1):\n",
    "#                 neutron_energy = E1[i][j]\n",
    "                \n",
    "        if(capture == True and DT[i][j] != 1):\n",
    "            ncap_nai = True\n",
    "#             if(TS[i][j] != TS_debug):\n",
    "#                 print(\"something is worng with neuton in NaI @ event %d\"%(i))\n",
    "#                 sys.exit(0)\n",
    "            if(Type[i][j] != 2112):\n",
    "                print(\"Neutron capture without neutron?? Check event = %d\"%(i))\n",
    "                sys.exit()\n",
    "            else:\n",
    "                neutron_energy_nCap = E1[i][j]\n",
    "            \n",
    "        if(DT[i][j] == 1):\n",
    "            edep_si += D3[i][j]\n",
    "            if(time3[i][j] < 1.e6):\n",
    "                edep_si_tCut += D3[i][j]\n",
    "        else:\n",
    "            edep_nai += D3[i][j]\n",
    "            h_edep_NaI_time.Fill(np.log10(time3[i][j]))\n",
    "            if(time3[i][j] < 1.e6):\n",
    "                edep_nai_tCut += D3[i][j]\n",
    "                if(DT[i][j] > 2000):\n",
    "                    Edep_tiles_temp[DT[i][j] - 2000 - 1] += D3[i][j]\n",
    "                else:\n",
    "                    Edep_tiles_temp[DT[i][j] - 1000 - 1] += D3[i][j]\n",
    "                \n",
    "    if(ncap_si):\n",
    "        continue\n",
    "    \n",
    "    h_k100sim_bkg_si_Edep.Fill(edep_si)\n",
    "    h_k100sim_bkg_NaI_Edep.Fill(edep_nai)\n",
    "    h_k100sim_bkg_si_Edep_withTimeCut.Fill(edep_si_tCut)\n",
    "    if(edep_nai_tCut > 0.):\n",
    "        h_k100sim_bkg_NaI_Edep_withTimeCut.Fill(edep_nai_tCut)\n",
    "        if(ncap_nai):\n",
    "            h_k100sim_bkg_NaI_Edep_NaiNcap.Fill(edep_nai_tCut)\n",
    "        \n",
    "    Edep_tiles += Edep_tiles_temp\n",
    "    \n",
    "    \n",
    "    \n",
    "    n_tiles = np.count_nonzero(Edep_tiles_temp)\n",
    "    h_tile_multiplicity.Fill(n_tiles)\n",
    "    h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity.Fill(edep_nai_tCut,n_tiles)\n",
    "    \n",
    "    tile_10MeV_veto = False\n",
    "    energy_in_trig_window = 0.  # This is the energy sum of panels with energies between 3 and 10 MeV each panel\n",
    "    for j,energy in enumerate(Edep_tiles_temp):\n",
    "        h_tile_energy.Fill(energy)\n",
    "        if(energy > 10.):\n",
    "            tile_10MeV_veto = True\n",
    "        if(energy > 3. and energy < 10. ):\n",
    "            energy_in_trig_window += energy\n",
    "    \n",
    "    if(edep_nai > 0.):\n",
    "        total_event_count += 1\n",
    "        \n",
    "    if(energy_in_trig_window > .0):\n",
    "        event_count_3_10MeV += 1\n",
    "        if(not tile_10MeV_veto):\n",
    "            total_event_count_in_trig_window += 1\n",
    "            if(ncap_nai):\n",
    "                ncap_nai_event_count_in_trig_window += 1\n",
    "    \n",
    "    if(neutron_energy > 0.):\n",
    "        h_neutron_NaI.Fill(np.log10(neutron_energy))\n",
    "        neutron_in_NaI += 1\n",
    "    if(neutron_energy_nCap > 0.):\n",
    "        h_neutron_NaI_nCap.Fill(np.log10(neutron_energy_nCap))\n",
    "        neutron_in_NaI_nCap += 1\n",
    "        \n",
    "\n",
    "       \n",
    "    if(edep_nai > 10.):\n",
    "        events_with_NaI_Edep_10MeV_or_more.append(i)\n",
    "        if(debug_count < 10):\n",
    "            print(\"event number with Edep_NaI > 10 MeV = %d, nCap-Nai? %d\"%(i,ncap_nai))\n",
    "            debug_count += 1\n",
    "    if(edep_nai_tCut > 1. and debug_count < 2 and False):\n",
    "        for j,energy in enumerate(Edep_tiles_temp):\n",
    "            print (\"Tile : Edep :: %d : %f\"%(j,energy))\n",
    "        print(\"Event : total esum :: %d : %f \"%(i,edep_nai_tCut))\n",
    "        debug_count += 1\n",
    "\n",
    "\n",
    "print (\"Events with neutrons passing through NaI = %d\"%(neutron_in_NaI))\n",
    "print (\"Events with neutrons passing through NaI and nCap = %d\"%(neutron_in_NaI_nCap))\n",
    "print (\"nCap in NaI event fraction = %0.2f%%\"%(100*neutron_in_NaI_nCap/neutron_in_NaI))\n",
    "print (\"Total event count with Edep NaI > 0. = %d\"%(total_event_count))\n",
    "print (\"Total Event count between 3 and 10 MeV = %d\"%(event_count_3_10MeV))\n",
    "\n",
    "print (\"Total Event count for (3 < Edep <  10 MeV) && (Edep_tile < 10 MeV) = %d\"%(total_event_count_in_trig_window))\n",
    "print (\"Ncap-in-NaI Event count for (3 < Edep <  10 MeV) && (Edep_tile < 10 MeV) = %d\"%(ncap_nai_event_count_in_trig_window))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "69363624",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654718841294\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654718841294(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-6.25000046566132,\"fY1\":-0.960637816292968,\"fX2\":56.2500004656613,\"fY2\":5.63543999684001,\"fXtoAbsPixelk\":79.60005474453,\"fXtoPixelk\":79.60005474453,\"fXtoPixel\":12.7359998102188,\"fYtoAbsPixelk\":488.695266993114,\"fYtoPixelk\":488.695266993114,\"fYtoPixel\":-86.7182007557782,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-6.25000046566132,\"fPixeltoXk\":-6.25000046566132,\"fPixeltoX\":0.0785175891097018,\"fAbsPixeltoYk\":5.63543999684001,\"fPixeltoYk\":-0.960637816292968,\"fPixeltoY\":-0.0115316045684143,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":0,\"fUymin\":-0.301029995663981,\"fUxmax\":50,\"fUymax\":4.97583217621102,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":1,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":0,\"fY1\":-0.301029995663981,\"fX2\":50,\"fY2\":4.97583217621102,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_k100sim_bkg_si_Edep\",\"fTitle\":\"Energy deposited in Si on non-nCap events\",\"fLineColor\":602,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"Energy [MeV]\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":500,\"fXmin\":0,\"fXmax\":50,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":50001,\"fTsumw\":50001,\"fTsumw2\":50001,\"fTsumwx\":73.8233510789983,\"fTsumwx2\":247.298056798836,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":42.5000012665987,\"fY1\":4.15132252820078,\"fX2\":55.0000016391278,\"fY2\":5.20669495471264,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":21,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_k100sim_bkg_si_Edep\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 50001  \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = 0.001476\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   = 0.07031\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":502,\"p\":1,\"v\":[49921,29,12,7,4,5,3,1,1,0,0,2,0,0,1,2,0,0,0,1,2,0,3,0,1,0,1,0,0,0,1],\"p1\":54,\"v1\":1,\"p2\":65,\"v2\":[1,0,1],\"p3\":82,\"v3\":1}},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":3.12499967403708,\"fY1\":5.20115980024608,\"fX2\":46.8750003259629,\"fY2\":5.6024596392269,\"fX1NDC\":0.15,\"fY1NDC\":0.934160843929211,\"fX2NDC\":0.85,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":41,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Energy deposited in Si on non-nCap events\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0517132878303528}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654718841294\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654718841294(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654718841294(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654718841294(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654718841294(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654718841294(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654718841294('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654718841294\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%jsroot on\n",
    "rt.gPad.SetLogy()\n",
    "h_k100sim_bkg_si_Edep.Draw()\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/h_k100sim_bkg_si_Edep.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e4ccbd9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654718850655\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654718850655(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-6.25000046566132,\"fY1\":-0.909235196982903,\"fX2\":56.2500004656613,\"fY2\":5.17281645368777,\"fXtoAbsPixelk\":79.60005474453,\"fXtoPixelk\":79.60005474453,\"fXtoPixel\":12.7359998102188,\"fYtoAbsPixelk\":486.489014818825,\"fYtoPixelk\":486.489014818825,\"fYtoPixel\":-94.0472118379535,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-6.25000046566132,\"fPixeltoXk\":-6.25000046566132,\"fPixeltoX\":0.0785175891097018,\"fAbsPixeltoYk\":5.17281645368777,\"fPixeltoYk\":-0.909235196982903,\"fPixeltoY\":-0.0106329574312424,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":0,\"fUymin\":-0.301029995663981,\"fUxmax\":50,\"fUymax\":4.56461125236885,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":1,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":0,\"fY1\":-0.301029995663981,\"fX2\":50,\"fY2\":4.56461125236885,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_k100sim_bkg_NaI_Edep\",\"fTitle\":\"Energy deposited in NaI on non-nCap events\",\"fLineColor\":600,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"Energy [MeV]\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":500,\"fXmin\":0,\"fXmax\":50,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":50001,\"fTsumw\":50001,\"fTsumw2\":50001,\"fTsumwx\":40839.424174321,\"fTsumwx2\":203407.261020953,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":42.5000012665987,\"fY1\":3.80435486853872,\"fX2\":55.0000016391278,\"fY2\":4.77748311089492,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":22,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_k100sim_bkg_NaI_Edep\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 50001  \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = 0.8168\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  1.844\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":502,\"p\":1,\"v\":[19367,5823,3828,2412,6409,1327,680,630,490,392,389,422,303,293,285,264,251,383,247,276,200,183,837,98,107,100,112,84,96,94,98,78,76,75,59,84,67,76,68,57,62,67,53,55,55,53,50,57,42,78,49,47,60,38,49,58,39,58,44,50,46,83,31,49,50,30,61,52,54,56,61,92,56,64,60,29,116,47,22,34,41,16,37,29,24,51,15,15,14,19,17,8,22,11,10,6,8,16,11,9,8,9,9,9,5,5,12,4,9,7,10,11,6,4,5,11,6,2,7,6,6,7,7,6,4,7,5,3,8,2,2,5,2,3,1,4,4,6,7,4,6,2,0,3,2,3,5,2,2,11,2,4,4,2,1,1,1,3,1,0,2,2,0,2,5,1,0,2,0,2,0,2,2,3,0,0,0,1,0,0,1,3,2,1,1,0,2,0,0,1,1,0,1,0,2,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1],\"p1\":259,\"v1\":1}},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Edep in NaI: non-nCap-Si}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":600,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":3.12499967403708,\"fY1\":4.77237930582867,\"fX2\":46.8750003259629,\"fY2\":5.1424062244359,\"fX1NDC\":0.15,\"fY1NDC\":0.934160843929211,\"fX2NDC\":0.85,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":42,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Energy deposited in NaI on non-nCap events\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0517132878303528}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654718850655\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654718850655(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654718850655(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654718850655(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654718850655(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654718850655(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654718850655('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654718850655\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h_k100sim_bkg_NaI_Edep.SetLineColor(rt.kBlue)\n",
    "h_k100sim_bkg_NaI_Edep.Draw()\n",
    "textOnTop.SetTextSize(0.04)\n",
    "textOnTop.SetTextColor(rt.kBlue)\n",
    "textOnTop.DrawLatexNDC(0.3,0.8,\"#bf{Edep in NaI: non-nCap-Si}\")\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5a74bb7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654718856413\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654718856413(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-4.93750033061953,\"fY1\":-0.961284249955564,\"fX2\":39.4375003306195,\"fY2\":5.64125789941807,\"fXtoAbsPixelk\":88.5690686953882,\"fXtoPixelk\":88.5690686953882,\"fXtoPixel\":17.9380279017166,\"fYtoAbsPixelk\":488.720825341548,\"fYtoPixelk\":488.720825341548,\"fYtoPixel\":-86.633297760055,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-4.93750033061953,\"fPixeltoXk\":-4.93750033061953,\"fPixeltoX\":0.0557474882678883,\"fAbsPixeltoYk\":5.64125789941807,\"fPixeltoYk\":-0.961284249955564,\"fPixeltoY\":-0.0115429058555483,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":-0.5,\"fUymin\":-0.301029995663981,\"fUxmax\":35,\"fUymax\":4.98100364512649,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":1,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":-0.5,\"fY1\":-0.301029995663981,\"fX2\":35,\"fY2\":4.98100364512649,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_edep_NaI_time\",\"fTitle\":\"time3\",\"fLineColor\":600,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":357,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"log10(time3 [ns])\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":355,\"fXmin\":-0.5,\"fXmax\":35,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":1416874,\"fTsumw\":1412917,\"fTsumw2\":1412917,\"fTsumwx\":6677078.73705167,\"fTsumwx2\":40141271.5715949,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":29.6750008992851,\"fY1\":4.15568595516322,\"fX2\":38.5500011637807,\"fY2\":5.21209267545047,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":18,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_edep_NaI_time\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 1416874\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  =  4.726\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  2.465\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":357,\"p\":11,\"v\":[35,199,1769,4163,4018,2303,1816,3022,7654,10188,16103,18141,20955,24985,30384,24351,23344,21993,21393,18918,19982,20681,20914,21687,20699,18576,19603,19749,18892,14436,16560,16776,13564,15844,16211,16184,15651,17340,18176,18177,20494,20060,26673,26478,30072,29742,31215,32911,34134,33709,37086,37925,39650,45210,47915,48273,50519,44136,37845,27843,20070,9857,4349,2026,628,356,90,39,31,0,0,0,0,0,0,0,0,4,0,0,25,0,3,2,81,66,21,7,42,13,85,140,318,108,147,205,221,392,519,693,498,740,928,1084,1480,2035,2175,1785,1890,2015,2077,2432,1914,1544,1638,2163,2088,2265,2264,2728,2291,1320,1108,948,912,670,576,356,364,576,300,364,304,246,354,377,238,262,121,15,196,39,63,18,21,49,33,42,78,27,28,39,32,39,39,81,40,15,36,30,52,52,24,41,37,56,65,38,49,41,24,7,3,0,2,6,4,0,6,8,2,0,6,11,4,0,12,5,24,52,32,45,36,29,49,58,87,80,77,126,82,97,80,106,98,86,119,165,191,157,188,232,219,236,317,328,334,250,210,251,127,96,48,9,7,7,7,7,6,25,13,16,8,22,13,22,19,20,14,36,10,6,7,42,20,17,36,48,28,62,50,87,61,66,29,143,28,18,12,13,4],\"p1\":335,\"v1\":[6,0,0,0,3,0,25,6,0,1,0,3,3,1,2,49,44,8,88,19,100,3957]}},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{time info of G4step in NaI}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":600,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLine\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":632,\"fLineStyle\":2,\"fLineWidth\":2,\"fX1\":6,\"fY1\":0,\"fX2\":6,\"fY2\":75778.5},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":14.7157191833418,\"fY1\":5.24510539652782,\"fX2\":19.7842808166582,\"fY2\":5.60824522015458,\"fX1NDC\":0.442889447236181,\"fY1NDC\":0.940000003948808,\"fX2NDC\":0.557110552763819,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":5,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"time3\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0467500016093254}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654718856413\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654718856413(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654718856413(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654718856413(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654718856413(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654718856413(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654718856413('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654718856413\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h_edep_NaI_time.SetLineColor(rt.kBlue)\n",
    "h_edep_NaI_time.Draw()\n",
    "textOnTop.SetTextSize(0.04)\n",
    "textOnTop.SetTextColor(rt.kBlue)\n",
    "textOnTop.DrawLatexNDC(0.3,0.8,\"#bf{time info of G4step in NaI}\")\n",
    "line = rt.TLine(6,0,6,h_edep_NaI_time.GetMaximum()*1.5)\n",
    "line.SetLineColor(rt.kRed)\n",
    "line.SetLineStyle(2)\n",
    "line.SetLineWidth(2)\n",
    "line.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a2646559",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654718860064\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654718860064(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-6.25000046566132,\"fY1\":-0.909235196982903,\"fX2\":56.2500004656613,\"fY2\":5.17281645368777,\"fXtoAbsPixelk\":79.60005474453,\"fXtoPixelk\":79.60005474453,\"fXtoPixel\":12.7359998102188,\"fYtoAbsPixelk\":486.489014818825,\"fYtoPixelk\":486.489014818825,\"fYtoPixel\":-94.0472118379535,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-6.25000046566132,\"fPixeltoXk\":-6.25000046566132,\"fPixeltoX\":0.0785175891097018,\"fAbsPixeltoYk\":5.17281645368777,\"fPixeltoYk\":-0.909235196982903,\"fPixeltoY\":-0.0106329574312424,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":0,\"fUymin\":-0.301029995663981,\"fUxmax\":50,\"fUymax\":4.56461125236885,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":1,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":0,\"fY1\":-0.301029995663981,\"fX2\":50,\"fY2\":4.56461125236885,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_k100sim_bkg_NaI_Edep\",\"fTitle\":\"Energy deposited in NaI on non-nCap events\",\"fLineColor\":600,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"Energy [MeV]\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":500,\"fXmin\":0,\"fXmax\":50,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":50001,\"fTsumw\":50001,\"fTsumw2\":50001,\"fTsumwx\":40839.424174321,\"fTsumwx2\":203407.261020953,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":42.5000012665987,\"fY1\":3.80435486853872,\"fX2\":55.0000016391278,\"fY2\":4.77748311089492,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":22,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_k100sim_bkg_NaI_Edep\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 50001  \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = 0.8168\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  1.844\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":502,\"p\":1,\"v\":[19367,5823,3828,2412,6409,1327,680,630,490,392,389,422,303,293,285,264,251,383,247,276,200,183,837,98,107,100,112,84,96,94,98,78,76,75,59,84,67,76,68,57,62,67,53,55,55,53,50,57,42,78,49,47,60,38,49,58,39,58,44,50,46,83,31,49,50,30,61,52,54,56,61,92,56,64,60,29,116,47,22,34,41,16,37,29,24,51,15,15,14,19,17,8,22,11,10,6,8,16,11,9,8,9,9,9,5,5,12,4,9,7,10,11,6,4,5,11,6,2,7,6,6,7,7,6,4,7,5,3,8,2,2,5,2,3,1,4,4,6,7,4,6,2,0,3,2,3,5,2,2,11,2,4,4,2,1,1,1,3,1,0,2,2,0,2,5,1,0,2,0,2,0,2,2,3,0,0,0,1,0,0,1,3,2,1,1,0,2,0,0,1,1,0,1,0,2,0,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1],\"p1\":259,\"v1\":1}},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Edep in NaI: no timing cut}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":600,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Edep in NaI: time3 < 1 ms}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":632,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.75,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":3.12499967403708,\"fY1\":4.77237930582867,\"fX2\":46.8750003259629,\"fY2\":5.1424062244359,\"fX1NDC\":0.15,\"fY1NDC\":0.934160843929211,\"fX2NDC\":0.85,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":42,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Energy deposited in NaI on non-nCap events\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0517132878303528}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654718860064\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654718860064(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654718860064(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654718860064(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654718860064(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654718860064(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654718860064('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654718860064\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h_k100sim_bkg_NaI_Edep.SetLineColor(rt.kBlue)\n",
    "h_k100sim_bkg_NaI_Edep.Draw()\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineColor(rt.kRed)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineStyle(2)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineWidth(2)\n",
    "#h_k100sim_bkg_NaI_Edep_withTimeCut.Draw(\"sames\")\n",
    "textOnTop.SetTextSize(0.04)\n",
    "textOnTop.SetTextColor(rt.kBlue)\n",
    "textOnTop.DrawLatexNDC(0.3,0.8,\"#bf{Edep in NaI: no timing cut}\")\n",
    "textOnTop.SetTextColor(rt.kRed)\n",
    "textOnTop.DrawLatexNDC(0.3,0.75,\"#bf{Edep in NaI: time3 < 1 ms}\")\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/h_k100sim_bkg_NaI_Edep_with_withoutTime_cut.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b1989416",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Info in <TCanvas::Print>: png file ./background_study/h_k100sim_bkg_NaI_Edep_comparison_nCapInNaI.png has been created\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654718863677\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654718863677(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-6.25000046566132,\"fY1\":-0.864860861132549,\"fX2\":56.2500004656613,\"fY2\":4.77344745748375,\"fXtoAbsPixelk\":79.60005474453,\"fXtoPixelk\":79.60005474453,\"fXtoPixel\":12.7359998102188,\"fYtoAbsPixelk\":484.260894102044,\"fYtoPixelk\":484.260894102044,\"fYtoPixel\":-101.448868645831,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-6.25000046566132,\"fPixeltoXk\":-6.25000046566132,\"fPixeltoX\":0.0785175891097018,\"fAbsPixeltoYk\":4.77344745748375,\"fPixeltoYk\":-0.864860861132549,\"fPixeltoY\":-0.00985718237520331,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":0,\"fUymin\":-0.301029995663981,\"fUxmax\":50,\"fUymax\":4.20961659201518,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":1,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":0,\"fY1\":-0.301029995663981,\"fX2\":50,\"fY2\":4.20961659201518,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_k100sim_bkg_NaI_Edep_withTimeCut\",\"fTitle\":\"Energy deposited in NaI on non-nCap events  < 1ms\",\"fLineColor\":600,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"Energy [MeV]\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":500,\"fXmin\":0,\"fXmax\":50,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":31491,\"fTsumw\":31491,\"fTsumw2\":31491,\"fTsumwx\":30938.2339697359,\"fTsumwx2\":153264.320888262,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":42.5000012665987,\"fY1\":3.50482811940202,\"fX2\":55.0000016391278,\"fY2\":4.40695743021646,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":34,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_k100sim_bkg_NaI_Edep_withTimeCut\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0151519813174754},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 31491  \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0317344069480896},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = 0.9824\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0317344069480896},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  1.975\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0317344069480896}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":502,\"p\":1,\"v\":[8552,4635,2924,1826,3969,1076,577,515,416,303,305,330,234,215,218,203,214,255,194,223,173,147,669,79,88,86,87,64,82,74,77,66,51,55,54,61,58,63,58,45,41,43,48,38,53,36,46,47,38,58,36,39,41,42,35,50,30,50,45,36,35,68,30,45,34,27,43,35,41,38,40,53,38,34,40,23,64,33,9,19,35,22,25,26,16,32,12,15,22,7,10,10,17,9,7,4,3,11,9,10,8,2,8,5,6,5,18,2,8,8,6,4,4,6,4,7,4,4,4,3,6,4,3,4,5,3,2,4,6,0,5,6,4,4,0,1,5,3,2,3,3,1,1,3,0,1,4,2,3,6,1,3,7,0,1,1,3,0,1,2,2,2,1,2,0,2,0,2,4,0,0,1,0,0,0,1,0,1,0,1,1,0,2,1,1,0,1],\"p1\":200,\"v1\":[1,1,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,2,0,0,0,0,0,0,0,1],\"p2\":254,\"v2\":1}},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_k100sim_bkg_NaI_Edep_NaiNcap\",\"fTitle\":\"Energy deposited in NaI on non-nCap events (Ncap in NaI)\",\"fLineColor\":632,\"fLineStyle\":2,\"fLineWidth\":2,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"Energy [MeV]\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":500,\"fXmin\":0,\"fXmax\":50,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":1790,\"fTsumw\":1790,\"fTsumw2\":1790,\"fTsumwx\":9455.53047269943,\"fTsumwx2\":79322.2046908387,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":42.5000012665987,\"fY1\":3.50482811940202,\"fX2\":55.0000016391278,\"fY2\":4.40695743021646,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":30,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_k100sim_bkg_NaI_Edep_NaiNcap\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0166939659257489},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 1790   \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0319107882678509},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  =  5.282\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0319107882678509},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  4.051\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0319107882678509}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":14}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":502,\"p\":1,\"v\":[57,18,29,30,20,18,18,23,17,27,19,16,21,15,20,26,24,17,17,13,20,14,15,16,20,20,11,15,14,21,21,17,7,14,20,16,21,21,22,14,12,16,22,14,15,10,19,18,16,14,14,24,17,22,17,21,14,15,18,15,25,15,11,25,15,13,14,16,19,17,14,11,10,7,7,12,8,12,5,6,14,17,13,15,11,7,9,9,17,4,7,9,11,8,6,3,3,7,9,10,6,2,8,3,4,5,15,2,8,7,6,4,4,6,4,7,3,4,4,2,5,4,3,2,4,2,1,3,4,0,5,5,4,4,0,1,3,1,1,2,2,1,1,3,0,1,2,2,2,1,1,2,5,0,0,1,3,0,1,2,2,2,1,1,0,2,0,2,4,0,0,1,0,0,0,1,0,1,0,1,0,0,2,1,1,0,1],\"p1\":200,\"v1\":[1,1,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,1],\"p2\":254,\"v2\":1}},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Edep in NaI: time3 < 1 ms}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":600,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.75,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0399999991059303},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Edep in NaI: (time3 < 1 ms) and (nCap in NaI)}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":632,\"fTextFont\":62,\"fX\":0.3,\"fY\":0.7,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0399999991059303},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":3.12499967403708,\"fY1\":4.40222599611914,\"fX2\":46.8750003259629,\"fY2\":4.74525594277621,\"fX1NDC\":0.15,\"fY1NDC\":0.934160843929211,\"fX2NDC\":0.85,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":49,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Energy deposited in NaI on non-nCap events  < 1ms\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0407211557030678}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"sames\",\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654718863677\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654718863677(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654718863677(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654718863677(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654718863677(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654718863677(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654718863677('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654718863677\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "rt.gPad.SetLogy()\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineColor(rt.kBlue)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineStyle(1)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.SetLineWidth(1)\n",
    "h_k100sim_bkg_NaI_Edep_withTimeCut.Draw()\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap.SetLineColor(rt.kRed)\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap.SetLineStyle(2)\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap.SetLineWidth(2)\n",
    "h_k100sim_bkg_NaI_Edep_NaiNcap.Draw(\"sames\")\n",
    "\n",
    "\n",
    "textOnTop.SetTextColor(rt.kBlue)\n",
    "textOnTop.DrawLatexNDC(0.3,0.75,\"#bf{Edep in NaI: time3 < 1 ms}\")\n",
    "textOnTop.SetTextColor(rt.kRed)\n",
    "textOnTop.DrawLatexNDC(0.3,0.70,\"#bf{Edep in NaI: (time3 < 1 ms) and (nCap in NaI)}\")\n",
    "\n",
    "c.Draw()\n",
    "if(save_ or True):\n",
    "    c.SaveAs(\"./background_study/h_k100sim_bkg_NaI_Edep_comparison_nCapInNaI.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b36f9587",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "<div id=\"root_plot_1654721604234\"\n",
       "     style=\"width: 796px; height: 572px\">\n",
       "</div>\n",
       "<script>\n",
       "\n",
       "function display_root_plot_1654721604234(Core) {\n",
       "   let obj = Core.parse({\"_typename\":\"TCanvas\",\"fUniqueID\":0,\"fBits\":3342344,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fLeftMargin\":0.1,\"fRightMargin\":0.1,\"fBottomMargin\":0.1,\"fTopMargin\":0.1,\"fXfile\":2,\"fYfile\":2,\"fAfile\":1,\"fXstat\":0.99,\"fYstat\":0.99,\"fAstat\":2,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fX1\":-11.8750001396984,\"fY1\":-218.662516291627,\"fX2\":6.8750001396984,\"fY2\":1967.96251629163,\"fXtoAbsPixelk\":504.133381751823,\"fXtoPixelk\":504.133381751823,\"fXtoPixel\":42.4533327007293,\"fYtoAbsPixelk\":514.800046590614,\"fYtoPixelk\":514.800046590614,\"fYtoPixel\":-0.261590346527884,\"fUtoAbsPixelk\":5e-5,\"fUtoPixelk\":5e-5,\"fUtoPixel\":796,\"fVtoAbsPixelk\":572.00005,\"fVtoPixelk\":572,\"fVtoPixel\":-572,\"fAbsPixeltoXk\":-11.8750001396984,\"fPixeltoXk\":-11.8750001396984,\"fPixeltoX\":0.0235552767329105,\"fAbsPixeltoYk\":1967.96251629163,\"fPixeltoYk\":-218.662516291627,\"fPixeltoY\":-3.82277103598471,\"fXlowNDC\":0,\"fYlowNDC\":0,\"fXUpNDC\":1,\"fYUpNDC\":1,\"fWNDC\":1,\"fHNDC\":1,\"fAbsXlowNDC\":0,\"fAbsYlowNDC\":0,\"fAbsWNDC\":1,\"fAbsHNDC\":1,\"fUxmin\":-10,\"fUymin\":0,\"fUxmax\":5,\"fUymax\":1749.3,\"fTheta\":30,\"fPhi\":30,\"fAspectRatio\":0,\"fNumber\":0,\"fTickx\":0,\"fTicky\":0,\"fLogx\":0,\"fLogy\":0,\"fLogz\":0,\"fPadPaint\":0,\"fCrosshair\":0,\"fCrosshairPos\":0,\"fBorderSize\":2,\"fBorderMode\":0,\"fModified\":false,\"fGridx\":false,\"fGridy\":false,\"fAbsCoord\":false,\"fEditable\":true,\"fFixedAspectRatio\":false,\"fPrimitives\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TFrame\",\"fUniqueID\":0,\"fBits\":8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":-10,\"fY1\":0,\"fX2\":5,\"fY2\":1749.3,\"fBorderSize\":1,\"fBorderMode\":0},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_neutron_NaI\",\"fTitle\":\"Energy of neutrons flux in NaI\",\"fLineColor\":600,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":1502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"log10(Neutron [MeV])\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1500,\"fXmin\":-10,\"fXmax\":5,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":323749,\"fTsumw\":323749,\"fTsumw2\":323749,\"fTsumwx\":-392666.857021995,\"fTsumwx2\":1406603.34191915,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":2.75000037997962,\"fY1\":1475.9718969937,\"fX2\":6.50000049173833,\"fY2\":1825.83189438704,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":18,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_neutron_NaI\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 323749 \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = -1.213\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  1.695\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":3}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":1502,\"p\":186,\"v\":1,\"p1\":199,\"v1\":[1,0,1],\"p2\":214,\"v2\":[1,0,1],\"p3\":233,\"v3\":[1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,3,0,0,1,1,0,3,0,1,2,0,0,0,1,2,1,0,1,1,0,1,0,1,5,2,3,4,1,0,3,0,1,2,3,0,1,3,4,1,7,5,2,4,2,3,5,4,3,2,3,5,2,5,2,5,3,3,6,4,2,4,7,1,6,6,5,8,4,7,4,6,6,6,8,8,9,8,7,15,10,8,3,5,10,7,8,8,14,7,6,13,13,11,11,9,8,8,20,12,16,21,17,16,12,15,11,11,14,20,14,14,18,20,19,21,21,14,31,22,30,21,21,29,23,24,25,26,23,34,26,25,40,31,31,24,28,24,30,25,25,26,30,48,31,43,30,44,65,33,39,47,43,45,42,55,40,51,52,49,58,48,47,64,53,59,53,48,54,52,60,63,69,80,54,54,71,76,56,59,66,80,68,64,87,77,92,74,73,92,72,86,94,87,81,78,110,72,96,98,111,109,84,97,94,94,91,98,103,108,108,89,121,119,121,110,111,120,110,126,124,114,139,132,121,124,129,138,121,119,139,146,123,130,130,117,131,151,142,134,139,137,131,161,144,141,154,171,169,142,146,181,166,147,155,131,171,184,170,181,176,183,177,191,188,190,181,185,186,207,189,162,192,192,209,193,186,227,194,181,190,195,186,191,211,201,200,207,198,212,206,190,209,229,189,206,241,228,187,212,243,206,220,224,223,204,240,231,220,237,221,211,243,261,234,236,243,216,218,230,262,258,250,238,239,215,253,252,237,259,269,214,245,267,272,241,252,223,262,217,270,273,265,266,245,254,268,250,255,260,248,253,241,242,269,266,282,269,278,227,279,269,284,254,246,270,239,299,243,269,260,269,246,293,290,300,294,285,250,251,277,308,289,289,288,286,268,277,265,287,320,284,280,298,291,268,295,304,280,307,272,275,272,306,267,310,305,309,267,264,261,327,290,289,313,264,312,268,292,302,300,308,323,298,276,307,285,315,311,317,331,280,301,301,309,304,292,304,315,284,299,304,292,293,316,340,327,308,306,306,286,295,283,288,289,297,293,323,304,316,284,316,277,355,323,308,329,284,316,308,286,298,333,345,325,340,318,347,370,356,383,334,342,333,254,237,219,172,148,162,156,201,214,230,283,276,267,289,301,309,304,298,302,334,313,327,295,311,348,312,350,326,335,330,350,369,339,355,354,346,331,343,335,343,344,351,332,304,355,354,336,347,366,349,331,387,360,320,289,364,309,348,343,319,351,351,370,363,350,375,355,365,375,344,368,356,368,340,353,386,346,384,383,386,393,372,393,409,372,351,395,370,390,384,399,386,337,394,361,381,386,408,380,398,379,424,417,401,417,424,411,388,401,380,391,410,434,387,403,435,429,412,403,432,438,412,423,430,430,437,466,471,432,483,470,438,430,451,487,462,481,479,498,507,526,495,516,480,519,560,541,527,530,500,497,523,536,546,504,558,557,598,548,585,553,608,612,623,610,572,625,666,634,658,635,661,652,601,605,642,620,676,628,711,671,675,689,712,704,704,733,746,723,741,696,740,793,738,826,796,819,862,920,890,900,939,886,896,885,943,927,981,921,927,1050,1020,1003,958,923,873,880,931,876,886,827,763,639,751,770,915,1089,1127,1231,1213,1279,1180,1248,1401,1306,1385,1400,1380,1493,1412,1419,1442,1484,1448,1476,1456,1522,1630,1553,1601,1499,1488,1374,1324,1276,1277,1177,1115,979,1074,1022,1136,1258,1274,1298,1386,1491,1475,1396,1450,1043,1210,1471,1447,1524,1492,1455,1402,1406,1330,1295,1423,1365,1357,1472,1217,1275,1202,1267,1351,1263,1329,1442,1511,1541,1543,1666,1510,1501,1570,1568,1507,1484,1325,1258,1156,1182,1308,1171,1074,936,940,860,818,821,849,779,855,833,964,1038,775,728,678,706,783,817,703,733,596,614,588,552,565,495,490,489,490,462,436,448,390,367,355,309,244,234,221,181,187,154,124,127,93,72,79,61,85,61,39,18,2]}},{\"_typename\":\"TH1F\",\"fUniqueID\":0,\"fBits\":8,\"fName\":\"h_neutron_NaI\",\"fTitle\":\"Energy of neutrons flux in NaI on nCap\",\"fLineColor\":632,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fNcells\":1502,\"fXaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"xaxis\",\"fTitle\":\"log10(Neutron [MeV])\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1500,\"fXmin\":-10,\"fXmax\":5,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fYaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"yaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fZaxis\":{\"_typename\":\"TAxis\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"zaxis\",\"fTitle\":\"\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42,\"fNbins\":1,\"fXmin\":0,\"fXmax\":1,\"fXbins\":[],\"fFirst\":0,\"fLast\":0,\"fBits2\":0,\"fTimeDisplay\":false,\"fTimeFormat\":\"\",\"fLabels\":null,\"fModLabs\":null},\"fBarOffset\":0,\"fBarWidth\":1000,\"fEntries\":47762,\"fTsumw\":47762,\"fTsumw2\":47762,\"fTsumwx\":-143168.860265571,\"fTsumwx2\":528593.815005116,\"fMaximum\":-1111,\"fMinimum\":-1111,\"fNormFactor\":0,\"fContour\":[],\"fSumw2\":[],\"fOption\":\"\",\"fFunctions\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TPaveStats\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":1001,\"fX1\":2.75000037997962,\"fY1\":1475.9718969937,\"fX2\":6.50000049173833,\"fY2\":1825.83189438704,\"fX1NDC\":0.780000016093254,\"fY1NDC\":0.775000005960464,\"fX2NDC\":0.980000019073486,\"fY2NDC\":0.935000002384186,\"fBorderSize\":1,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"brNDC\",\"fName\":\"stats\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":12,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":18,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"h_neutron_NaI\",\"fTextAngle\":0,\"fTextSize\":0.0368,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0368000008165836},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Entries = 47762  \",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Mean  = -2.998\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Std Dev   =  1.443\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04}],\"opt\":[\"\",\"\",\"\",\"\"]},\"fOptFit\":0,\"fOptStat\":1111,\"fFitFormat\":\"5.4g\",\"fStatFormat\":\"6.4g\",\"fParent\":{\"$ref\":14}}],\"opt\":[\"brNDC\"]},\"fBufferSize\":0,\"fBuffer\":[],\"fBinStatErrOpt\":0,\"fStatOverflows\":2,\"fArray\":{\"$arr\":\"Float32\",\"len\":1502,\"p\":177,\"v\":[1,0,0,0,0,0,0,0,0,2],\"p1\":214,\"v1\":[2,1,0,0,0,0,2,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,0,1,1,0,1,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,2,0,0,0,1,2,0,1,1,2,1,0,2,2,3,6,0,2,3,1,0,3,2,1,3,3,2,0,0,0,3,2,0,3,2,0,0,4,5,1,5,2,4,2,2,3,4,2,5,1,4,2,2,4,2,5,6,2,6,3,3,6,6,2,0,3,3,6,3,4,2,3,3,3,5,4,7,4,2,6,5,3,3,4,12,6,4,3,8,5,9,14,5,6,4,5,6,7,10,4,10,6,6,14,6,7,6,2,8,6,9,8,4,8,3,4,12,4,9,7,11,10,4,12,14,10,10,6,6,11,12,9,10,11,12,12,9,7,6,9,12,5,14,12,7,18,12,13,9,10,9,12,10,7,9,12,11,13,12,14,11,12,17,14,14,18,15,11,11,13,15,12,8,20,8,9,9,15,13,9,10,14,16,9,16,12,8,19,13,17,20,17,20,10,15,12,19,8,19,14,17,22,16,11,19,18,17,10,15,19,13,15,7,19,10,17,15,18,11,18,16,15,21,18,6,25,13,15,19,11,26,19,14,14,17,17,19,11,18,15,23,16,22,41,114,46,24,20,11,20,14,16,23,17,26,17,18,61,24,28,24,29,22,24,31,22,26,23,35,54,53,82,180,358,441,171,92,62,61,42,56,44,54,53,59,64,75,94,130,171,207,325,388,339,199,187,178,208,272,369,487,387,272,187,143,141,168,288,576,401,191,96,65,55,42,65,61,25,13,29,14,17,16,32,290,157,27,21,29,50,87,223,596,211,63,30,75,129,621,162,54,26,10,20,7,8,7,8,6,4,10,8,6,13,7,39,139,531,72,52,23,43,17,38,82,422,166,185,100,20,57,283,300,92,355,36,15,8,17,27,299,243,65,27,37,304,214,9,5,19,219,25,221,8,176,3,22,36,94,76,201,234,78,15,24,288,291,49,226,12,130,138,163,31,291,157,23,37,230,79,17,9,157,214,89,115,40,233,89,180,156,101,143,66,171,92,80,64,110,112,165,130,23,91,84,69,159,91,11,100,65,184,94,130,59,65,271,85,142,45,51,194,289,135,115,134,72,245,149,184,133,212,291,140,184,153,81,213,173,98,108,103,61,63,19,13,29,18,15,25,5,14,20,23,48,34,51,51,71,71,44,94,64,86,67,58,75,98,75,75,77,74,69,59,81,111,134,116,108,107,126,104,114,125,111,102,110,91,88,112,104,84,106,121,102,117,98,107,104,111,104,103,93,100,102,106,97,85,94,99,94,90,89,84,105,92,101,108,98,101,82,85,100,80,72,83,104,97,96,103,83,90,81,93,84,97,85,95,91,67,78,74,69,95,82,73,69,81,85,74,74,71,77,77,73,80,86,63,89,69,73,71,84,76,76,83,101,83,81,97,92,80,78,64,55,28,41,58,58,62,73,64,62,63,60,55,56,52,65,67,87,63,55,44,59,62,52,52,54,67,41,66,51,62,53,56,55,53,46,55,58,50,49,53,61,44,60,53,44,61,55,47,61,55,55,58,47,46,58,46,56,43,39,33,42,44,50,31,48,41,34,46,46,42,37,53,40,52,56,46,33,38,41,47,50,37,37,46,40,42,32,40,35,37,34,23,33,27,25,27,37,29,40,35,45,50,32,43,38,35,36,27,42,46,42,33,33,14,24,33,23,35,24,33,28,29,28,20,27,14,21,16,19,13,24,17,29,19,21,27,18,31,11,17,12,15,21,20,17,20,12,15,21,17,12,11,15,12,21,7,10,12,7,12,5,5,7,14,4,11,13,10,9,12,8,9,5,6,6,6,6,6,9,2,6,4,6,4,4,6,3,5,1,4,4,3,1,2,1,2,2,0,6,2,5,4,2,8,1,2,5,4,4,2,2,3,1,4,2,2,1,5,2,5,1,0,2,1,0,2,1,2,2,1]}},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Energy of neutrons entering NaI}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":600,\"fTextFont\":62,\"fX\":0.28,\"fY\":0.85,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":16393,\"fName\":\"\",\"fTitle\":\"#bf{Energy of neutrons on nCap in NaI}\",\"fTextAngle\":0,\"fTextSize\":0.04,\"fTextAlign\":11,\"fTextColor\":632,\"fTextFont\":62,\"fX\":0.28,\"fY\":0.8,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.04},{\"_typename\":\"TPaveText\",\"fUniqueID\":0,\"fBits\":9,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":0,\"fFillStyle\":0,\"fX1\":-7.52810937140708,\"fY1\":1823.99696950308,\"fX2\":2.52810937140709,\"fY2\":1957.02940155535,\"fX1NDC\":0.231834170854271,\"fY1NDC\":0.934160843929211,\"fX2NDC\":0.768165829145729,\"fY2NDC\":0.995000004768372,\"fBorderSize\":0,\"fInit\":1,\"fShadowColor\":1,\"fCornerRadius\":0,\"fOption\":\"blNDC\",\"fName\":\"title\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":22,\"fTextColor\":1,\"fTextFont\":42,\"fLabel\":\"\",\"fLongest\":30,\"fMargin\":0.05,\"fLines\":{\"_typename\":\"TList\",\"name\":\"TList\",\"arr\":[{\"_typename\":\"TLatex\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"\",\"fTitle\":\"Energy of neutrons flux in NaI\",\"fTextAngle\":0,\"fTextSize\":0,\"fTextAlign\":0,\"fTextColor\":0,\"fTextFont\":0,\"fX\":0,\"fY\":0,\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":2,\"fLimitFactorSize\":3,\"fOriginSize\":0.0517132878303528}],\"opt\":[\"\"]}},{\"_typename\":\"TStyle\",\"fUniqueID\":0,\"fBits\":0,\"fName\":\"Modern\",\"fTitle\":\"Modern Style\",\"fLineColor\":1,\"fLineStyle\":1,\"fLineWidth\":1,\"fFillColor\":19,\"fFillStyle\":1001,\"fMarkerColor\":1,\"fMarkerStyle\":1,\"fMarkerSize\":1,\"fTextAngle\":0,\"fTextSize\":0.05,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62,\"fXaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fYaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":0,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fZaxis\":{\"_typename\":\"TAttAxis\",\"fNdivisions\":510,\"fAxisColor\":1,\"fLabelColor\":1,\"fLabelFont\":42,\"fLabelOffset\":0.005,\"fLabelSize\":0.035,\"fTickLength\":0.03,\"fTitleOffset\":1,\"fTitleSize\":0.035,\"fTitleColor\":1,\"fTitleFont\":42},\"fBarWidth\":1,\"fBarOffset\":0,\"fColorModelPS\":0,\"fDrawBorder\":0,\"fOptLogx\":0,\"fOptLogy\":0,\"fOptLogz\":0,\"fOptDate\":0,\"fOptStat\":1111,\"fOptTitle\":1,\"fOptFile\":0,\"fOptFit\":0,\"fShowEventStatus\":0,\"fShowEditor\":0,\"fShowToolBar\":0,\"fNumberContours\":20,\"fAttDate\":{\"_typename\":\"TAttText\",\"fTextAngle\":0,\"fTextSize\":0.025,\"fTextAlign\":11,\"fTextColor\":1,\"fTextFont\":62},\"fDateX\":0.01,\"fDateY\":0.01,\"fEndErrorSize\":2,\"fErrorX\":0.5,\"fFuncColor\":2,\"fFuncStyle\":1,\"fFuncWidth\":2,\"fGridColor\":0,\"fGridStyle\":3,\"fGridWidth\":1,\"fLegendBorderSize\":1,\"fLegendFillColor\":0,\"fLegendFont\":42,\"fLegendTextSize\":0,\"fHatchesLineWidth\":1,\"fHatchesSpacing\":1,\"fFrameFillColor\":0,\"fFrameLineColor\":1,\"fFrameFillStyle\":1001,\"fFrameLineStyle\":1,\"fFrameLineWidth\":1,\"fFrameBorderSize\":1,\"fFrameBorderMode\":0,\"fHistFillColor\":0,\"fHistLineColor\":602,\"fHistFillStyle\":1001,\"fHistLineStyle\":1,\"fHistLineWidth\":1,\"fHistMinimumZero\":false,\"fHistTopMargin\":0.05,\"fCanvasPreferGL\":false,\"fCanvasColor\":0,\"fCanvasBorderSize\":2,\"fCanvasBorderMode\":0,\"fCanvasDefH\":500,\"fCanvasDefW\":700,\"fCanvasDefX\":10,\"fCanvasDefY\":10,\"fPadColor\":0,\"fPadBorderSize\":2,\"fPadBorderMode\":0,\"fPadBottomMargin\":0.1,\"fPadTopMargin\":0.1,\"fPadLeftMargin\":0.1,\"fPadRightMargin\":0.1,\"fPadGridX\":false,\"fPadGridY\":false,\"fPadTickX\":0,\"fPadTickY\":0,\"fPaperSizeX\":20,\"fPaperSizeY\":26,\"fScreenFactor\":1,\"fStatColor\":0,\"fStatTextColor\":1,\"fStatBorderSize\":1,\"fStatFont\":42,\"fStatFontSize\":0,\"fStatStyle\":1001,\"fStatFormat\":\"6.4g\",\"fStatX\":0.98,\"fStatY\":0.935,\"fStatW\":0.2,\"fStatH\":0.16,\"fStripDecimals\":true,\"fTitleAlign\":23,\"fTitleColor\":0,\"fTitleTextColor\":1,\"fTitleBorderSize\":0,\"fTitleFont\":42,\"fTitleFontSize\":0.05,\"fTitleStyle\":0,\"fTitleX\":0.5,\"fTitleY\":0.995,\"fTitleW\":0,\"fTitleH\":0,\"fLegoInnerR\":0.5,\"fLineStyles\":[\"\",\"  \",\" 12 12\",\" 4 8\",\" 12 16 4 16\",\" 20 12 4 12\",\" 20 12 4 12 4 12 4 12\",\" 20 20\",\" 20 12 4 12 4 12\",\" 80 20\",\" 80 40 4 40\",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \",\"  \"],\"fHeaderPS\":\"\",\"fTitlePS\":\"\",\"fFitFormat\":\"5.4g\",\"fPaintTextFormat\":\"g\",\"fLineScalePS\":3,\"fJoinLinePS\":0,\"fCapLinePS\":0,\"fTimeOffset\":788918400,\"fImageScaling\":1}],\"opt\":[\"\",\"\",\"sames\",\"\",\"\",\"blNDC\",\"\"]},\"fExecs\":null,\"fName\":\"c\",\"fTitle\":\"c\",\"fNumPaletteColor\":0,\"fNextPaletteColor\":0,\"fDISPLAY\":\"$DISPLAY\",\"fDoubleBuffer\":0,\"fRetained\":true,\"fXsizeUser\":0,\"fYsizeUser\":0,\"fXsizeReal\":20,\"fYsizeReal\":15,\"fWindowTopX\":0,\"fWindowTopY\":0,\"fWindowWidth\":0,\"fWindowHeight\":0,\"fCw\":796,\"fCh\":572,\"fCatt\":{\"_typename\":\"TAttCanvas\",\"fXBetween\":2,\"fYBetween\":2,\"fTitleFromTop\":1.2,\"fXdate\":0.2,\"fYdate\":0.3,\"fAdate\":1},\"kMoveOpaque\":true,\"kResizeOpaque\":true,\"fHighLightColor\":2,\"fBatch\":true,\"kShowEventStatus\":false,\"kAutoExec\":true,\"kMenuBar\":true});\n",
       "   Core.settings.HandleKeys = false;\n",
       "   Core.draw(\"root_plot_1654721604234\", obj, \"\");\n",
       "}\n",
       "\n",
       "function script_load_root_plot_1654721604234(src, on_error) {\n",
       "    let script = document.createElement('script');\n",
       "    script.src = src;\n",
       "    script.onload = function() { display_root_plot_1654721604234(JSROOT); };\n",
       "    script.onerror = function() { script.remove(); on_error(); };\n",
       "    document.head.appendChild(script);\n",
       "}\n",
       "\n",
       "if (typeof requirejs !== 'undefined') {\n",
       "\n",
       "    // We are in jupyter notebooks, use require.js which should be configured already\n",
       "    requirejs.config({\n",
       "       paths: { 'JSRootCore' : [ 'scripts/JSRoot.core', 'https://root.cern/js/6.1.1/scripts/JSRoot.core.min', 'https://jsroot.gsi.de/6.1.1/scripts/JSRoot.core.min' ] }\n",
       "    })(['JSRootCore'],  function(Core) {\n",
       "       display_root_plot_1654721604234(Core);\n",
       "    });\n",
       "\n",
       "} else if (typeof JSROOT !== 'undefined') {\n",
       "\n",
       "   // JSROOT already loaded, just use it\n",
       "   display_root_plot_1654721604234(JSROOT);\n",
       "\n",
       "} else {\n",
       "\n",
       "    // We are in jupyterlab without require.js, directly loading jsroot\n",
       "    // Jupyterlab might be installed in a different base_url so we need to know it.\n",
       "    try {\n",
       "        var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;\n",
       "    } catch(_) {\n",
       "        var base_url = '/';\n",
       "    }\n",
       "\n",
       "    // Try loading a local version of requirejs and fallback to cdn if not possible.\n",
       "    script_load_root_plot_1654721604234(base_url + 'static/scripts/JSRoot.core.js', function(){\n",
       "        console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');\n",
       "        script_load_root_plot_1654721604234('https://root.cern/js/6.1.1/scripts/JSRoot.core.min.js', function(){\n",
       "            document.getElementById(\"root_plot_1654721604234\").innerHTML = \"Failed to load JSROOT\";\n",
       "        });\n",
       "    });\n",
       "}\n",
       "\n",
       "</script>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "h_neutron_NaI.SetLineColor(rt.kBlue)\n",
    "h_neutron_NaI.SetLineStyle(1)\n",
    "h_neutron_NaI.SetLineWidth(1)\n",
    "h_neutron_NaI.Draw()\n",
    "h_neutron_NaI_nCap.SetLineColor(rt.kRed)\n",
    "h_neutron_NaI_nCap.SetLineStyle(1)\n",
    "h_neutron_NaI_nCap.SetLineWidth(1)\n",
    "h_neutron_NaI_nCap.Draw(\"sames\")\n",
    "\n",
    "textOnTop.SetTextSize(0.04)\n",
    "textOnTop.SetTextColor(rt.kBlue)\n",
    "textOnTop.DrawLatexNDC(0.28,0.85,\"#bf{Energy of neutrons entering NaI}\")\n",
    "textOnTop.SetTextColor(rt.kRed)\n",
    "textOnTop.DrawLatexNDC(0.28,0.80,\"#bf{Energy of neutrons on nCap in NaI}\")\n",
    "\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/NaI/h_neutron_NaI_and_nCap_comparison.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f3b6ecf2",
   "metadata": {},
   "outputs": [],
   "source": [
    "outFile = rt.TFile(\"outFile.root\",\"recreate\")\n",
    "outFile.cd()\n",
    "h_neutron_NaI.Write()\n",
    "h_neutron_NaI_nCap.Write()\n",
    "outFile.Close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "112b13fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_tile_multiplicity.SetLineColor(rt.kBlue)\n",
    "h_tile_multiplicity.Draw()\n",
    "rt.gPad.SetLogy(0)\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/h_tile_multiplicity.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c824a49f",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_k100sim_bkg_NaI_Edep_withTimeCut_vs_tile_multiplicity.Draw(\"colz\")\n",
    "rt.gPad.SetLogy(0)\n",
    "c.Draw()\n",
    "c.SaveAs(\"./background_study/h_Edep_vs_multi.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48d2511d",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_tile_energy.SetLineColor(rt.kBlue)\n",
    "h_tile_energy.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/h_tile_energy.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93b7d254",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "f8bfdbb6",
   "metadata": {},
   "source": [
    "## For Debug"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25af28ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "i = 10980\n",
    "total_D3 = 0.0\n",
    "for j in range(len(TS[i])):\n",
    "    if(D3[i][j] > 0 or True):\n",
    "        print(\"i:Type:TS:P:X:Y:Z:DT:E1:D3:GT:nCap :: %d : %d : %d : %d : %0.2f : %0.2f : %0.2f : %d : %0.3f : %0.3f : %d : %d\"%(j,Type[i][j],TS[i][j],P[i][j],X1[i][j],Y1[i][j],Z1[i][j],DT[i][j],E1[i][j],D3[i][j],time3[i][j],nCap[i][j]))\n",
    "        total_D3 += D3[i][j]\n",
    "\n",
    "\n",
    "   \n",
    "tracks = TS[i]/100000\n",
    "tracks = tracks.astype('int32')\n",
    "neutron_tracks = tracks[Type[i] == 2112]\n",
    "neutron_parents = P[i][Type[i] == 2112]\n",
    "#neutron_tracks = neutron_tracks[neutron_parents == 0]\n",
    "neutron_energy = E1[i][Type[i] == 2112]\n",
    "neutron_DT = DT[i][Type[i] == 2112]\n",
    "\n",
    "neutron_X1 = X1[i][Type[i] == 2112]\n",
    "neutron_Y1 = Y1[i][Type[i] == 2112]\n",
    "neutron_Z1 = Z1[i][Type[i] == 2112]\n",
    "neutron_capture = nCap[i][Type[i] == 2112]\n",
    "\n",
    "unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "\n",
    "neutron_energy = neutron_energy[indices]\n",
    "neutron_X1 = neutron_X1[indices]\n",
    "neutron_Y1 = neutron_Y1[indices]\n",
    "neutron_Z1 = neutron_Z1[indices]\n",
    "neutron_capture = neutron_capture[indices]\n",
    "\n",
    "print(Type[i])\n",
    "print(P[i])\n",
    "print(D3[i])\n",
    "print(neutron_capture)\n",
    "print(neutron_energy)\n",
    "print(\"Total energy deposit = %f\"%(total_D3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bbc8106",
   "metadata": {},
   "outputs": [],
   "source": [
    "debug_count = 0\n",
    "h_nCap_NaI_Edep_10MeV_or_more = rt.TH1F(\"h_nCap_NaI_Edep_10MeV_or_more\",\"nCap in NaI when Edep_NaI > 10 MeV\",4,-1,3)\n",
    "h_secondary_PID_nCap_NaI = rt.TH1F(\"h_secondary_PID_nCap_NaI\",\"PID of secondaries generated on NaI nCap\",400000,-200000,200000)\n",
    "\n",
    "h_energy_gamma_nCap_NaI = rt.TH1F(\"h_energy_gamma_nCap_NaI\",\"Energy of gammas on nCap NaI\",500,0,10)\n",
    "h_energy_gamma_nCap_NaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_energySum_gamma_nCap_NaI = rt.TH1F(\"h_energySum_gamma_nCap_NaI\",\"EnergySum of gammas on nCap NaI\",1000,0,50)\n",
    "h_energySum_gamma_nCap_NaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_energy_other_nCap_NaI = rt.TH1F(\"h_energy_other_nCap_NaI\",\"Energy of all other PIDs on nCap NaI\",1000,0,50)\n",
    "h_energy_other_nCap_NaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_energySum_other_nCap_NaI = rt.TH1F(\"h_energySum_other_nCap_NaI\",\"Energy of all other PIDs on nCap NaI\",1000,0,50)\n",
    "h_energySum_other_nCap_NaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_nGammas_nCap_NaI = rt.TH1F(\"h_nGammas_nCap_NaI\",\"Nb of gammas on nCap in NaI\",20,0,20)\n",
    "h_nGammas_nCap_NaI.GetXaxis().SetTitle(\"Nb of gammas\")\n",
    "\n",
    "h_Edep_PID12805x_nCap_NaI = rt.TH1F(\"h_Edep_PID12805x_nCap_NaI\",\"Edep by PID 12805X on nCap NaI\",1000,0,50)\n",
    "h_Edep_PID12805x_nCap_NaI.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_I128_decayProd_pdgid = rt.TH1F(\"h_I128_decayProd_pdgid\",\"PID of I128 decay products\",13020,-20,13000)\n",
    "\n",
    "h_I128_decay_betaEn = rt.TH1F(\"h_I128_decay_betaEn\",\"Energy of beta-\",220,0,2.2)\n",
    "h_I128_decay_betaEn.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_I128_decay_betaNb = rt.TH1F(\"h_I128_decay_betaNb\",\"Number of beta-\",11,-1,10)\n",
    "\n",
    "\n",
    "h_I128_decay_NuEn = rt.TH1F(\"h_I128_decay_NuEn\",\"Energy of Nu\",220,0,2.2)\n",
    "h_I128_decay_NuEn.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "h_I128_decay_gammaEn = rt.TH1F(\"h_I128_decay_gammaEn\",\"Energy of Gamma\",200,0,2)\n",
    "h_I128_decay_gammaEn.GetXaxis().SetTitle(\"Energy [MeV]\")\n",
    "\n",
    "print (\"events_with_NaI_Edep_10MeV_or_more = \",len(events_with_NaI_Edep_10MeV_or_more))\n",
    "debug = True\n",
    "debug_count = 0\n",
    "for i in events_with_NaI_Edep_10MeV_or_more:\n",
    "    ncap_si = False\n",
    "    edep_si = 0.\n",
    "    edep_nai = 0.\n",
    "    edep_si_tCut = 0.\n",
    "    edep_nai_tCut = 0.\n",
    "    ncap_nai = False\n",
    "    Edep_tiles_temp = np.zeros(23)\n",
    "    neutron_energy = 0.\n",
    "    neutron_energy_nCap = 0.\n",
    "    \n",
    "    first_step_in_detector = True\n",
    "    TS_debug = -1\n",
    "    neutron_track = 0 \n",
    "    I128_track = 0\n",
    "    for j,capture in enumerate(nCap[i]):\n",
    "        if(D3[i][j] != 1 and time3[i][j] < 1.e6):\n",
    "                edep_nai_tCut += D3[i][j]\n",
    "#         if(capture == True and DT[i][j] == 1):\n",
    "#             ncap_si = True\n",
    "#             break\n",
    "#         if(Type[i][j] == 2112 and DT[i][j] != 1 and first_step_in_detector):\n",
    "#             neutron_energy = E1[i][j]\n",
    "#             TS_debug = TS[i][j]\n",
    "#             first_step_in_detector = False\n",
    "         \n",
    "        if(capture == True and DT[i][j] != 1):\n",
    "            ncap_nai = True\n",
    "            track = int(TS[i][j]/100000)*100000\n",
    "            step = TS[i][j] - (track)\n",
    "            neutron_track = track\n",
    "#             print (\"event : TS : track : step :: %d : %d : %d : %d\"%(i,TS[i][j],track,step))\n",
    "#             sys.exit(0)\n",
    "\n",
    "            if(Type[i][j] != 2112):\n",
    "                print(\"Neutron capture without neutron?? Check event = %d\"%(i))\n",
    "                sys.exit()\n",
    "        \n",
    "        if(Type[i][j] == 128053):\n",
    "            track = int(TS[i][j]/100000)*100000\n",
    "            step = TS[i][j] - (track)\n",
    "            if(step == 1):\n",
    "                I128_track = track\n",
    "    \n",
    "    if(edep_nai_tCut > 10.):\n",
    "        h_nCap_NaI_Edep_10MeV_or_more.Fill(int(ncap_nai))\n",
    "        if(debug_count < 10 and (not ncap_nai)):\n",
    "            print (\"Edep > 10 MeV on non-nCap-NaI, event ID %d\"%(i))\n",
    "            debug_count += 1\n",
    "            \n",
    "        \n",
    "     \n",
    "    if(ncap_nai):\n",
    "        esum_gammas = 0.\n",
    "        esum_others = 0.\n",
    "        edep_12805x = 0.\n",
    "        n_gammas = 0\n",
    "        e_beta = 0.\n",
    "        n_beta = 0\n",
    "        e_nu = 0.\n",
    "        for j,capture in enumerate(nCap[i]):\n",
    "            track = int(TS[i][j]/100000)*100000\n",
    "            step = TS[i][j] - (track)\n",
    "            \n",
    "            if(P[i][j] == neutron_track and step == 1):\n",
    "                #print(\"event : TS : Type : E1 :: %d : %d : %d : %f\"%(i, TS[i][j], Type[i][j], E1[i][j]))\n",
    "                h_secondary_PID_nCap_NaI.Fill(Type[i][j])\n",
    "                if(Type[i][j] == 22):\n",
    "                    h_energy_gamma_nCap_NaI.Fill(E1[i][j])\n",
    "                    esum_gammas += E1[i][j]\n",
    "                    n_gammas += 1\n",
    "                else:\n",
    "                    h_energy_other_nCap_NaI.Fill(E1[i][j])\n",
    "                    esum_others += E1[i][j]\n",
    "            \n",
    "            if(P[i][j] == I128_track and step == 1):\n",
    "                h_I128_decayProd_pdgid.Fill(Type[i][j])\n",
    "                if(Type[i][j] == 11):\n",
    "                    h_I128_decay_betaEn.Fill(E1[i][j])\n",
    "                    n_beta += 1\n",
    "                elif(Type[i][j] == -12):\n",
    "                    h_I128_decay_NuEn.Fill(E1[i][j])\n",
    "                elif(Type[i][j] == 22):\n",
    "                    h_I128_decay_gammaEn.Fill(E1[i][j])\n",
    "            pid = int(Type[i][j]/10)\n",
    "            if(pid == 12805 and P[i][j] == neutron_track):\n",
    "                edep_12805x += D3[i][j]\n",
    "        h_Edep_PID12805x_nCap_NaI.Fill(edep_12805x)\n",
    "        \n",
    "        if(n_beta > 0):\n",
    "            h_I128_decay_betaNb.Fill(n_beta)\n",
    "        h_nGammas_nCap_NaI.Fill(n_gammas)\n",
    "        if(debug == True and n_gammas == 10 and False):\n",
    "            print(\"Nb gamma = 10 for event %d\"%(i))\n",
    "            debug = False\n",
    "        \n",
    "        if(debug == True and n_beta == 10):\n",
    "            print(\"Nb beta = 10 for event %d\"%(i))\n",
    "            debug = False\n",
    "            \n",
    "        if(esum_gammas > 0.):\n",
    "            h_energySum_gamma_nCap_NaI.Fill(esum_gammas)\n",
    "        if(esum_others > 0.):\n",
    "            h_energySum_other_nCap_NaI.Fill(esum_others)\n",
    "            \n",
    "    \n",
    "            \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab427b87",
   "metadata": {},
   "outputs": [],
   "source": [
    "%jsroot on\n",
    "h_nCap_NaI_Edep_10MeV_or_more.Draw()\n",
    "h_nCap_NaI_Edep_10MeV_or_more.SetLineColor(rt.kBlue)\n",
    "rt.gPad.SetLogy(0)\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "27cf283a",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_secondary_PID_nCap_NaI.Draw()\n",
    "rt.gPad.SetLogy()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc82a0fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energy_gamma_nCap_NaI.Draw()\n",
    "rt.gPad.SetLogy(1)\n",
    "h_energy_gamma_nCap_NaI.SetLineColor(rt.kBlue)\n",
    "\n",
    "c.Draw()\n",
    "if(save_ or True):\n",
    "    c.SaveAs(\"./background_study/NaI/h_energy_gamma_nCap_NaI.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0d81cf97",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_nGammas_nCap_NaI.Draw()\n",
    "h_nGammas_nCap_NaI.SetLineColor(rt.kBlue)\n",
    "\n",
    "c.Draw()\n",
    "if(save_ or True):\n",
    "    c.SaveAs(\"./background_study/NaI/h_nGammas_nCap_NaI.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "57a77279",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energySum_gamma_nCap_NaI.Draw()\n",
    "rt.gPad.SetLogy(0)\n",
    "h_energySum_gamma_nCap_NaI.SetLineColor(rt.kBlue)\n",
    "\n",
    "c.Draw()\n",
    "if(save_):\n",
    "    c.SaveAs(\"./background_study/NaI/h_energySum_gamma_nCap_NaI.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e8650233",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energy_other_nCap_NaI.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8c1a6921",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_energySum_other_nCap_NaI.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a49de53",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_Edep_PID12805x_nCap_NaI.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fc575d81",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_I128_decayProd_pdgid.Draw()\n",
    "rt.gPad.SetLogy(1)\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02755e7e",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_I128_decay_betaNb.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "837f2005",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_I128_decay_betaEn.Draw()\n",
    "rt.gPad.SetLogy(1)\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41e3c5fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_I128_decay_NuEn.Draw()\n",
    "rt.gPad.SetLogy(1)\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d9d9fd5",
   "metadata": {},
   "outputs": [],
   "source": [
    "h_I128_decay_gammaEn.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d34c7a72",
   "metadata": {},
   "source": [
    "# Geometry debug"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4db26c41",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79048139",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "h_neutron_x_y_z_NaI_horizontal = rt.TH3F(\"h_neutron_x_y_z_NaI_horizontal\",\"Hit Position in bottom array\",900,-500,400,800,-400,400,1600,-800.0, 800.0)\n",
    "h_neutron_x_y_z_NaI_horizontal.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y_z_NaI_horizontal.GetYaxis().SetTitle(\"y [mm]\")\n",
    "h_neutron_x_y_z_NaI_horizontal.GetYaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "h_neutron_x_y_z_NaI_vertical = rt.TH3F(\"h_neutron_x_y_z_NaI_vertical\",\"Hit Position in vertical array\",900,-500,400,800,-400,400,1600,-800.0, 800.0)\n",
    "h_neutron_x_y_z_NaI_vertical.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y_z_NaI_vertical.GetYaxis().SetTitle(\"y [mm]\")\n",
    "h_neutron_x_y_z_NaI_vertical.GetYaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "h_neutron_x_y_z_Si = rt.TH3F(\"h_neutron_x_y_z_Si\",\"Hit Position in Si\",900,-500,400,800,-400,400,1600,-800.0, 800.0)\n",
    "h_neutron_x_y_z_Si.GetXaxis().SetTitle(\"x [mm]\")\n",
    "h_neutron_x_y_z_Si.GetYaxis().SetTitle(\"y [mm]\")\n",
    "h_neutron_x_y_z_Si.GetYaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "# h_neutron_x_y_z_nCap = rt.TH3F(\"h_neutron_x_y_z_nCap\",\"Position of neutron captures registered in Si crystal\",120,-60,60,120,-60,60,60,10.0, 70.0)\n",
    "# h_neutron_x_y_z_nCap.GetXaxis().SetTitle(\"x [mm]\")\n",
    "# h_neutron_x_y_z_nCap.GetYaxis().SetTitle(\"y [mm]\")\n",
    "# h_neutron_x_y_z_nCap.GetYaxis().SetTitle(\"z [mm]\")\n",
    "\n",
    "total_capture_events = 0\n",
    "capture_in_si = 0\n",
    "capture_in_NaI = 0\n",
    "events_with_no_neutron = []\n",
    "events_with_neutron = []\n",
    "events_with_nCap_in_NaI = []\n",
    "events_with_nCap_in_Si = []\n",
    "debug_count = 0\n",
    "last = -1\n",
    "for i in tqdm(range(len(EV))):\n",
    "    if(i > 10000):\n",
    "        break\n",
    "    if(debug_count > 10):\n",
    "        break\n",
    "    for j in range(len(DT[i])):\n",
    "        if(DT[i][j] == 2001 and (X1[i][j] > -250.0) and i != last):\n",
    "            print (\"entry : X1 : Y1 : Z1 :: %d : %f : %f : %f\"%(i,X1[i][j],Y1[i][j],Z1[i][j]))\n",
    "            debug_count += 1\n",
    "            last = i\n",
    "            \n",
    "        if(DT[i][j] == 2001):\n",
    "            h_neutron_x_y_z_NaI_vertical.Fill(X1[i][j],Y1[i][j],Z1[i][j])\n",
    "        elif(DT[i][j] >= 1001 and DT[i][j] <= 1003):\n",
    "            h_neutron_x_y_z_NaI_horizontal.Fill(X1[i][j],Y1[i][j],Z1[i][j])\n",
    "        elif(DT[i][j] == 1):\n",
    "            h_neutron_x_y_z_Si.Fill(X1[i][j],Y1[i][j],Z1[i][j])\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2d5095a",
   "metadata": {},
   "outputs": [],
   "source": [
    "i = 32\n",
    "total_D3 = 0.0\n",
    "print(\"i : Type : TS : P : X1 : Y1 : Z1 : DT : X3 : Y3: Z3 : E1 : D3 : GT : nCap\")\n",
    "for j in range(len(TS[i])):\n",
    "    if(D3[i][j] > 0 or True):\n",
    "        print(\"%d : %d : %d : %d : %0.2f : %0.2f : %0.2f : %d : %0.2f : %0.2f : %0.2f : %0.3f : %0.3f : %d : %d\"%(j,Type[i][j],TS[i][j],P[i][j],X1[i][j],Y1[i][j],Z1[i][j],DT[i][j],X3[i][j],Y3[i][j],Z3[i][j], E1[i][j],D3[i][j],time3[i][j],nCap[i][j]))\n",
    "        total_D3 += D3[i][j]\n",
    "\n",
    "\n",
    "   \n",
    "tracks = TS[i]/100000\n",
    "tracks = tracks.astype('int32')\n",
    "neutron_tracks = tracks[Type[i] == 2112]\n",
    "neutron_parents = P[i][Type[i] == 2112]\n",
    "#neutron_tracks = neutron_tracks[neutron_parents == 0]\n",
    "neutron_energy = E1[i][Type[i] == 2112]\n",
    "neutron_DT = DT[i][Type[i] == 2112]\n",
    "\n",
    "neutron_X1 = X1[i][Type[i] == 2112]\n",
    "neutron_Y1 = Y1[i][Type[i] == 2112]\n",
    "neutron_Z1 = Z1[i][Type[i] == 2112]\n",
    "neutron_capture = nCap[i][Type[i] == 2112]\n",
    "\n",
    "unique_tracks, indices = np.unique(neutron_tracks, return_index=True)\n",
    "\n",
    "neutron_energy = neutron_energy[indices]\n",
    "neutron_X1 = neutron_X1[indices]\n",
    "neutron_Y1 = neutron_Y1[indices]\n",
    "neutron_Z1 = neutron_Z1[indices]\n",
    "neutron_capture = neutron_capture[indices]\n",
    "\n",
    "print(Type[i])\n",
    "print(P[i])\n",
    "print(D3[i])\n",
    "print(neutron_capture)\n",
    "print(neutron_energy)\n",
    "print(\"Total energy deposit = %f\"%(total_D3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "947abcbe",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d113e156",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b570dc79",
   "metadata": {},
   "outputs": [],
   "source": [
    "gaus_parent = rt.TH1F(\"gaus_parent\",\"gaus_parent\",1000,0,10)\n",
    "uniform_dis = rt.TH1F(\"uniform_dis\",\"uniform_dis\",1000,-2,2)\n",
    "chan1 = rt.TH1F(\"chan1\",\"channel 1\",1000,0,10)\n",
    "chan2 = rt.TH1F(\"chan2\",\"channel 2\",1000,0,10)\n",
    "chan_total = rt.TH1F(\"chan_total\",\"channel - total\",1000,0,10)\n",
    "rand = rt.TRandom3()\n",
    "for i in range(100000):\n",
    "    G = rand.Gaus(5,0.5)\n",
    "    U = rand.Uniform()\n",
    "    c1 = G*U\n",
    "    c2 = G*(1.0-U)\n",
    "    gaus_parent.Fill(G)\n",
    "    uniform_dis.Fill(U)\n",
    "    chan1.Fill(c1)\n",
    "    chan2.Fill(c2)\n",
    "    chan_total.Fill(c1+c2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "21fe52f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "gaus_parent.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be34b7c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "uniform_dis.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f0940547",
   "metadata": {},
   "outputs": [],
   "source": [
    "chan1.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e673141f",
   "metadata": {},
   "outputs": [],
   "source": [
    "chan1.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "29a0d688",
   "metadata": {},
   "outputs": [],
   "source": [
    "chan_total.Draw()\n",
    "c.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9323aa0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6cbc75c7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
